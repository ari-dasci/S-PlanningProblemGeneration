INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_12.pddl --sas-file temp_problems/sas_plan_12
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.010s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
316 relevant atoms
140 auxiliary atoms
456 final queue length
577 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.004s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
164 of 164 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 65
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 164
Translator axioms: 0
Translator task size: 705
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.020s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_12
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_12 < temp_problems/sas_plan_12
[t=1.03e-05s, 736 KB] reading input...
[t=0.0007433s, 764 KB] done reading input!
[t=0.0019773s, 1112 KB] Initializing landmark count heuristic...
[t=0.0019956s, 1120 KB] Generating landmark graph...
[t=0.0020129s, 1120 KB] Building a landmark graph with reasonable orders.
[t=0.0020668s, 1120 KB] Initializing Exploration...
[t=0.0021385s, 1132 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0026506s, 1172 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0026632s, 1172 KB] Landmarks generation time: 0.0006082s
[t=0.0026708s, 1172 KB] Discovered 28 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0026784s, 1172 KB] 55 edges
[t=0.0026849s, 1172 KB] approx. reasonable orders
[t=0.0027373s, 1172 KB] approx. obedient reasonable orders
[t=0.0027627s, 1172 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0027694s, 1172 KB] Landmarks generation time: 0.0007678s
[t=0.0027762s, 1172 KB] Discovered 28 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0027832s, 1172 KB] 55 edges
[t=0.0027894s, 1172 KB] Landmark graph generation time: 0.0007955s
[t=0.0027961s, 1172 KB] Landmark graph contains 28 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0028027s, 1172 KB] Landmark graph contains 55 orderings.
[t=0.0028597s, 1172 KB] Simplifying 164 unary operators... done! [164 unary operators]
[t=0.0029129s, 1172 KB] time to simplify: 5.52e-05s
[t=0.0029326s, 1172 KB] Initializing additive heuristic...
[t=0.002939s, 1172 KB] Initializing FF heuristic...
[t=0.002984s, 1176 KB] Building successor generator...done!
[t=0.0030519s, 1188 KB] peak memory difference for successor generator creation: 12 KB
[t=0.0030585s, 1188 KB] time for successor generation creation: 5.53e-05s
[t=0.0030662s, 1188 KB] Variables: 10
[t=0.0030725s, 1188 KB] FactPairs: 65
[t=0.0030787s, 1188 KB] Bytes per state: 4
[t=0.0032033s, 1208 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0032126s, 1208 KB] 7 initial landmarks, 6 goal landmarks
[t=0.0032339s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0032406s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0032469s, 1208 KB] g=0, 1 evaluated, 0 expanded
[t=0.0032624s, 1208 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0032688s, 1208 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0032932s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0032996s, 1208 KB] g=1, 3 evaluated, 2 expanded
[t=0.0033451s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0033517s, 1208 KB] g=2, 7 evaluated, 6 expanded
[t=0.0033658s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0033724s, 1208 KB] g=1, 8 evaluated, 7 expanded
[t=0.0034353s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0034418s, 1208 KB] g=2, 14 evaluated, 13 expanded
[t=0.0034976s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.003504s, 1208 KB] g=3, 19 evaluated, 18 expanded
[t=0.0035312s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0035376s, 1208 KB] g=3, 21 evaluated, 20 expanded
[t=0.0035634s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0035696s, 1208 KB] g=4, 23 evaluated, 22 expanded
[t=0.0035963s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0036025s, 1208 KB] g=4, 25 evaluated, 24 expanded
[t=0.0036463s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0036528s, 1208 KB] g=4, 29 evaluated, 28 expanded
[t=0.0036688s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0036749s, 1208 KB] g=5, 30 evaluated, 29 expanded
[t=0.0037609s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0039879s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0040041s, 1208 KB] g=6, 38 evaluated, 37 expanded
[t=0.0040649s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0040754s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0040847s, 1208 KB] g=7, 42 evaluated, 41 expanded
[t=0.0041318s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0041383s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0041446s, 1208 KB] g=8, 46 evaluated, 45 expanded
[t=0.0041698s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0041762s, 1208 KB] g=9, 48 evaluated, 47 expanded
[t=0.0042107s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0042173s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0042244s, 1208 KB] g=10, 51 evaluated, 50 expanded
[t=0.0042522s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0042589s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0042653s, 1208 KB] g=11, 53 evaluated, 52 expanded
[t=0.0042995s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0043061s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0043125s, 1208 KB] g=12, 56 evaluated, 55 expanded
[t=0.004339s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0043455s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0043519s, 1208 KB] g=13, 58 evaluated, 57 expanded
[t=0.0043858s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0043923s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0043988s, 1208 KB] g=14, 61 evaluated, 60 expanded
[t=0.0044249s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0044312s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0044373s, 1208 KB] g=15, 63 evaluated, 62 expanded
[t=0.0044738s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0044804s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0044869s, 1208 KB] g=16, 66 evaluated, 65 expanded
[t=0.0045116s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0045184s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0045252s, 1208 KB] g=17, 68 evaluated, 67 expanded
[t=0.0045403s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0045468s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0045532s, 1208 KB] g=18, 69 evaluated, 68 expanded
[t=0.0045739s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0045804s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0045867s, 1208 KB] g=19, 70 evaluated, 69 expanded
[t=0.0046023s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0046097s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0046166s, 1208 KB] g=20, 71 evaluated, 70 expanded
[t=0.0046322s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0046385s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0046447s, 1208 KB] g=21, 72 evaluated, 71 expanded
[t=0.0046601s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0046664s, 1208 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0046725s, 1208 KB] g=22, 73 evaluated, 72 expanded
[t=0.0046892s, 1208 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0046956s, 1208 KB] g=23, 74 evaluated, 73 expanded
[t=0.0047103s, 1208 KB] Solution found!
[t=0.0047174s, 1208 KB] Actual search time: 0.0014994s
load obj7 obj16 obj6 (1)
load obj7 obj13 obj6 (1)
load obj7 obj12 obj6 (1)
drive obj7 obj6 obj9 (1)
load obj7 obj15 obj9 (1)
load obj7 obj14 obj9 (1)
unload obj7 obj13 obj9 (1)
load obj7 obj11 obj9 (1)
drive obj7 obj9 obj3 (1)
unload obj7 obj16 obj3 (1)
load obj8 obj16 obj3 (1)
unload obj7 obj15 obj3 (1)
load obj8 obj15 obj3 (1)
unload obj7 obj12 obj3 (1)
load obj8 obj12 obj3 (1)
unload obj7 obj11 obj3 (1)
load obj8 obj11 obj3 (1)
fly obj8 obj3 obj0 (1)
unload obj8 obj16 obj0 (1)
unload obj8 obj15 obj0 (1)
unload obj8 obj12 obj0 (1)
unload obj8 obj11 obj0 (1)
drive obj7 obj3 obj6 (1)
unload obj7 obj14 obj6 (1)
[t=0.0047236s, 1208 KB] Plan length: 24 step(s).
[t=0.0047236s, 1208 KB] Plan cost: 24
[t=0.0047236s, 1208 KB] Expanded 74 state(s).
[t=0.0047236s, 1208 KB] Reopened 0 state(s).
[t=0.0047236s, 1208 KB] Evaluated 75 state(s).
[t=0.0047236s, 1208 KB] Evaluations: 150
[t=0.0047236s, 1208 KB] Generated 976 state(s).
[t=0.0047236s, 1208 KB] Dead ends: 0 state(s).
[t=0.0047236s, 1208 KB] Number of registered states: 75
[t=0.0047236s, 1208 KB] Int hash set load factor: 75/128 = 0.585938
[t=0.0047236s, 1208 KB] Int hash set resizes: 7
[t=0.0047236s, 1208 KB] Search time: 0.001521s
[t=0.0047236s, 1208 KB] Total time: 0.0047236s
Solution found.
search exit code: 0

