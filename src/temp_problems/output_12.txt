INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_12.pddl --sas-file temp_problems/sas_plan_12
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.016s CPU, 0.016s wall-clock]
501 relevant atoms
198 auxiliary atoms
699 final queue length
894 total queue pushes
Completing instantiation... [0.000s CPU, 0.006s wall-clock]
Instantiating: [0.016s CPU, 0.021s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.010s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 13 mutex groups necessary.
282 of 282 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 112
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 282
Translator axioms: 0
Translator task size: 1221
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.016s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_12
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_12 < temp_problems/sas_plan_12
[t=8.7e-06s, 732 KB] reading input...
[t=0.0010283s, 788 KB] done reading input!
[t=0.0022538s, 1136 KB] Initializing landmark count heuristic...
[t=0.002272s, 1144 KB] Generating landmark graph...
[t=0.0022952s, 1144 KB] Building a landmark graph with reasonable orders.
[t=0.0023736s, 1144 KB] Initializing Exploration...
[t=0.0025108s, 1172 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0031303s, 1216 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0031528s, 1216 KB] Landmarks generation time: 0.0008096s
[t=0.0031606s, 1216 KB] Discovered 26 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0031676s, 1216 KB] 28 edges
[t=0.003174s, 1216 KB] approx. reasonable orders
[t=0.0031947s, 1216 KB] approx. obedient reasonable orders
[t=0.0032089s, 1216 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0032156s, 1216 KB] Landmarks generation time: 0.0009377s
[t=0.0032225s, 1216 KB] Discovered 26 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0032294s, 1216 KB] 28 edges
[t=0.0032354s, 1216 KB] Landmark graph generation time: 0.0009651s
[t=0.003242s, 1216 KB] Landmark graph contains 26 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0032485s, 1216 KB] Landmark graph contains 28 orderings.
[t=0.0033323s, 1216 KB] Simplifying 282 unary operators... done! [282 unary operators]
[t=0.0034137s, 1216 KB] time to simplify: 8.34e-05s
[t=0.0034389s, 1216 KB] Initializing additive heuristic...
[t=0.0034497s, 1216 KB] Initializing FF heuristic...
[t=0.0034943s, 1216 KB] Building successor generator...done!
[t=0.0036465s, 1216 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0036588s, 1216 KB] time for successor generation creation: 0.000129s
[t=0.0036707s, 1216 KB] Variables: 13
[t=0.0036795s, 1216 KB] FactPairs: 112
[t=0.0036881s, 1216 KB] Bytes per state: 8
[t=0.0039384s, 1236 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0039584s, 1236 KB] 10 initial landmarks, 10 goal landmarks
[t=0.0039873s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0039967s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0040053s, 1236 KB] g=0, 1 evaluated, 0 expanded
[t=0.0040214s, 1236 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0040279s, 1236 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0040403s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0040466s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0040528s, 1236 KB] g=1, 2 evaluated, 1 expanded
[t=0.0040868s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0040932s, 1236 KB] g=2, 4 evaluated, 3 expanded
[t=0.0041199s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0041262s, 1236 KB] g=2, 6 evaluated, 5 expanded
[t=0.0041562s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0041624s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0041684s, 1236 KB] g=3, 8 evaluated, 7 expanded
[t=0.0041969s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0042031s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0042092s, 1236 KB] g=4, 10 evaluated, 9 expanded
[t=0.0042363s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0042424s, 1236 KB] g=6, 12 evaluated, 11 expanded
[t=0.00426s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0042663s, 1236 KB] g=7, 13 evaluated, 12 expanded
[t=0.0042822s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0042884s, 1236 KB] g=7, 14 evaluated, 13 expanded
[t=0.0043115s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0043185s, 1236 KB] g=8, 15 evaluated, 14 expanded
[t=0.0043558s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.004362s, 1236 KB] g=8, 18 evaluated, 17 expanded
[t=0.0043794s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0043856s, 1236 KB] g=9, 19 evaluated, 18 expanded
[t=0.0044016s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0044078s, 1236 KB] g=9, 20 evaluated, 19 expanded
[t=0.0044244s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0044305s, 1236 KB] g=10, 21 evaluated, 20 expanded
[t=0.0044655s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0044727s, 1236 KB] g=10, 24 evaluated, 23 expanded
[t=0.0044893s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0044955s, 1236 KB] g=11, 25 evaluated, 24 expanded
[t=0.0045317s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0045378s, 1236 KB] g=11, 28 evaluated, 27 expanded
[t=0.004554s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0045601s, 1236 KB] g=12, 29 evaluated, 28 expanded
[t=0.0045744s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0045805s, 1236 KB] g=12, 30 evaluated, 29 expanded
[t=0.004606s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0046121s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0046182s, 1236 KB] g=13, 32 evaluated, 31 expanded
[t=0.0046369s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0046431s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0046491s, 1236 KB] g=14, 33 evaluated, 32 expanded
[t=0.0046653s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0046717s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0046779s, 1236 KB] g=15, 34 evaluated, 33 expanded
[t=0.0046945s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0047008s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.004707s, 1236 KB] g=16, 35 evaluated, 34 expanded
[t=0.0047227s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0047289s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0047352s, 1236 KB] g=17, 36 evaluated, 35 expanded
[t=0.0047513s, 1236 KB] Solution found!
[t=0.0047582s, 1236 KB] Actual search time: 0.0007928s
fly obj3 obj0 obj10 (1)
load obj17 obj12 obj5 (1)
drive obj17 obj5 obj21 (1)
unload obj17 obj12 obj21 (1)
fly obj3 obj10 obj5 (1)
load obj3 obj9 obj5 (1)
load obj3 obj7 obj5 (1)
load obj3 obj19 obj5 (1)
load obj3 obj16 obj5 (1)
load obj3 obj13 obj5 (1)
load obj3 obj11 obj5 (1)
fly obj3 obj5 obj10 (1)
unload obj3 obj9 obj10 (1)
unload obj3 obj7 obj10 (1)
unload obj3 obj19 obj10 (1)
unload obj3 obj16 obj10 (1)
unload obj3 obj13 obj10 (1)
unload obj3 obj11 obj10 (1)
[t=0.0047645s, 1236 KB] Plan length: 18 step(s).
[t=0.0047645s, 1236 KB] Plan cost: 18
[t=0.0047645s, 1236 KB] Expanded 36 state(s).
[t=0.0047645s, 1236 KB] Reopened 0 state(s).
[t=0.0047645s, 1236 KB] Evaluated 37 state(s).
[t=0.0047645s, 1236 KB] Evaluations: 74
[t=0.0047645s, 1236 KB] Generated 534 state(s).
[t=0.0047645s, 1236 KB] Dead ends: 0 state(s).
[t=0.0047645s, 1236 KB] Number of registered states: 37
[t=0.0047645s, 1236 KB] Int hash set load factor: 37/64 = 0.578125
[t=0.0047645s, 1236 KB] Int hash set resizes: 6
[t=0.0047645s, 1236 KB] Search time: 0.0008279s
[t=0.0047645s, 1236 KB] Total time: 0.0047645s
Solution found.
search exit code: 0

