INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_12.pddl --sas-file temp_problems/sas_plan_12
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.014s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.016s CPU, 0.009s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.024s wall-clock]
426 relevant atoms
202 auxiliary atoms
628 final queue length
852 total queue pushes
Completing instantiation... [0.016s CPU, 0.019s wall-clock]
Instantiating: [0.031s CPU, 0.055s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.016s CPU, 0.013s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
258 of 258 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 67
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 258
Translator axioms: 0
Translator task size: 1039
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.047s CPU, 0.106s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_12
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_12 < temp_problems/sas_plan_12
[t=2e-05s, 728 KB] reading input...
[t=0.0019831s, 772 KB] done reading input!
[t=0.0047182s, 1120 KB] Initializing landmark count heuristic...
[t=0.0047611s, 1120 KB] Generating landmark graph...
[t=0.0048068s, 1120 KB] Building a landmark graph with reasonable orders.
[t=0.0049209s, 1120 KB] Initializing Exploration...
[t=0.0051527s, 1164 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0058916s, 1172 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0059191s, 1172 KB] Landmarks generation time: 0.0010336s
[t=0.0059401s, 1172 KB] Discovered 10 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.0059491s, 1172 KB] 7 edges
[t=0.0059566s, 1172 KB] approx. reasonable orders
[t=0.0059829s, 1172 KB] approx. obedient reasonable orders
[t=0.0059975s, 1172 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0060048s, 1172 KB] Landmarks generation time: 0.0012394s
[t=0.0060125s, 1172 KB] Discovered 10 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.0060204s, 1172 KB] 7 edges
[t=0.0060269s, 1172 KB] Landmark graph generation time: 0.001269s
[t=0.0060346s, 1172 KB] Landmark graph contains 10 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.0060426s, 1172 KB] Landmark graph contains 7 orderings.
[t=0.0061967s, 1172 KB] Simplifying 258 unary operators... done! [258 unary operators]
[t=0.0063498s, 1172 KB] time to simplify: 0.0001575s
[t=0.0063978s, 1172 KB] Initializing additive heuristic...
[t=0.0064057s, 1172 KB] Initializing FF heuristic...
[t=0.0065033s, 1172 KB] Building successor generator...done!
[t=0.0066909s, 1176 KB] peak memory difference for successor generator creation: 4 KB
[t=0.0066989s, 1176 KB] time for successor generation creation: 0.0001714s
[t=0.0067088s, 1176 KB] Variables: 10
[t=0.0067158s, 1176 KB] FactPairs: 67
[t=0.0067222s, 1176 KB] Bytes per state: 4
[t=0.0070601s, 1188 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0070769s, 1188 KB] 4 initial landmarks, 4 goal landmarks
[t=0.0071136s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0071227s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0071296s, 1188 KB] g=0, 1 evaluated, 0 expanded
[t=0.0071651s, 1188 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0071732s, 1188 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0072936s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0073038s, 1188 KB] g=1, 5 evaluated, 4 expanded
[t=0.007345s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0073543s, 1188 KB] g=2, 6 evaluated, 5 expanded
[t=0.007429s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0074384s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0074453s, 1188 KB] g=3, 8 evaluated, 7 expanded
[t=0.0075467s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0075559s, 1188 KB] g=4, 11 evaluated, 10 expanded
[t=0.007595s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.007603s, 1188 KB] g=5, 12 evaluated, 11 expanded
[t=0.0076688s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0076778s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0076849s, 1188 KB] g=6, 14 evaluated, 13 expanded
[t=0.0077482s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0077567s, 1188 KB] g=7, 16 evaluated, 15 expanded
[t=0.0077947s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0078026s, 1188 KB] g=8, 17 evaluated, 16 expanded
[t=0.0078412s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0078492s, 1188 KB] g=7, 18 evaluated, 17 expanded
[t=0.0078849s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.007898s, 1188 KB] g=9, 19 evaluated, 18 expanded
[t=0.0079611s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0079703s, 1188 KB] g=10, 21 evaluated, 20 expanded
[t=0.0080062s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0080137s, 1188 KB] g=10, 22 evaluated, 21 expanded
[t=0.0080473s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0080552s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0080619s, 1188 KB] g=11, 23 evaluated, 22 expanded
[t=0.0080945s, 1188 KB] Solution found!
[t=0.0081031s, 1188 KB] Actual search time: 0.0010207s
load obj9 obj5 obj4 (1)
fly obj9 obj4 obj14 (1)
unload obj9 obj5 obj14 (1)
load obj6 obj7 obj0 (1)
fly obj6 obj0 obj14 (1)
unload obj6 obj7 obj14 (1)
load obj3 obj13 obj0 (1)
fly obj3 obj0 obj4 (1)
unload obj3 obj13 obj4 (1)
load obj12 obj15 obj10 (1)
drive obj12 obj10 obj16 (1)
unload obj12 obj15 obj16 (1)
[t=0.0081104s, 1188 KB] Plan length: 12 step(s).
[t=0.0081104s, 1188 KB] Plan cost: 12
[t=0.0081104s, 1188 KB] Expanded 23 state(s).
[t=0.0081104s, 1188 KB] Reopened 0 state(s).
[t=0.0081104s, 1188 KB] Evaluated 24 state(s).
[t=0.0081104s, 1188 KB] Evaluations: 48
[t=0.0081104s, 1188 KB] Generated 552 state(s).
[t=0.0081104s, 1188 KB] Dead ends: 0 state(s).
[t=0.0081104s, 1188 KB] Number of registered states: 24
[t=0.0081104s, 1188 KB] Int hash set load factor: 24/32 = 0.75
[t=0.0081104s, 1188 KB] Int hash set resizes: 5
[t=0.0081104s, 1188 KB] Search time: 0.0010524s
[t=0.0081104s, 1188 KB] Total time: 0.0081104s
Solution found.
search exit code: 0

