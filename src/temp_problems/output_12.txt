INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_12.pddl --sas-file temp_problems/sas_plan_12
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.011s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
253 relevant atoms
113 auxiliary atoms
366 final queue length
427 total queue pushes
Completing instantiation... [0.000s CPU, 0.007s wall-clock]
Instantiating: [0.000s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.016s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.016s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.000s CPU, 0.005s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
106 of 106 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 61
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 106
Translator axioms: 0
Translator task size: 465
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.016s CPU, 0.047s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_12
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_12 < temp_problems/sas_plan_12
[t=1.53e-05s, 720 KB] reading input...
[t=0.001084s, 740 KB] done reading input!
[t=0.0036333s, 1084 KB] Initializing landmark count heuristic...
[t=0.0036652s, 1092 KB] Generating landmark graph...
[t=0.0036888s, 1092 KB] Building a landmark graph with reasonable orders.
[t=0.0037625s, 1092 KB] Initializing Exploration...
[t=0.0039803s, 1104 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0046064s, 1132 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0046323s, 1132 KB] Landmarks generation time: 0.0008899s
[t=0.0046421s, 1132 KB] Discovered 22 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0046519s, 1132 KB] 29 edges
[t=0.0046608s, 1132 KB] approx. reasonable orders
[t=0.0047028s, 1132 KB] approx. obedient reasonable orders
[t=0.0047298s, 1132 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0047396s, 1132 KB] Landmarks generation time: 0.0010701s
[t=0.0047488s, 1132 KB] Discovered 22 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0047586s, 1132 KB] 29 edges
[t=0.004767s, 1132 KB] Landmark graph generation time: 0.0011058s
[t=0.0047768s, 1132 KB] Landmark graph contains 22 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0047876s, 1132 KB] Landmark graph contains 29 orderings.
[t=0.0049296s, 1132 KB] Simplifying 106 unary operators... done! [106 unary operators]
[t=0.0050151s, 1132 KB] time to simplify: 9.05e-05s
[t=0.0050477s, 1132 KB] Initializing additive heuristic...
[t=0.0050565s, 1132 KB] Initializing FF heuristic...
[t=0.0051594s, 1132 KB] Building successor generator...done!
[t=0.0052696s, 1140 KB] peak memory difference for successor generator creation: 8 KB
[t=0.0052782s, 1140 KB] time for successor generation creation: 9.3e-05s
[t=0.0052892s, 1140 KB] Variables: 9
[t=0.0052971s, 1140 KB] FactPairs: 61
[t=0.0053048s, 1140 KB] Bytes per state: 4
[t=0.0055917s, 1152 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0056097s, 1152 KB] 9 initial landmarks, 7 goal landmarks
[t=0.0056474s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0056593s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0056674s, 1152 KB] g=0, 1 evaluated, 0 expanded
[t=0.0056933s, 1152 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0057021s, 1152 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0057402s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0057491s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0057573s, 1152 KB] g=1, 3 evaluated, 2 expanded
[t=0.0058075s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0058167s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0058251s, 1152 KB] g=2, 5 evaluated, 4 expanded
[t=0.0058744s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.005884s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0058923s, 1152 KB] g=3, 7 evaluated, 6 expanded
[t=0.0059231s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.005932s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0059402s, 1152 KB] g=4, 8 evaluated, 7 expanded
[t=0.0059715s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0059803s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0059884s, 1152 KB] g=5, 9 evaluated, 8 expanded
[t=0.0060181s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0060263s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0060338s, 1152 KB] g=6, 10 evaluated, 9 expanded
[t=0.0061139s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0061265s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0061342s, 1152 KB] g=7, 11 evaluated, 10 expanded
[t=0.0061991s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0062087s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0062163s, 1152 KB] g=8, 14 evaluated, 13 expanded
[t=0.0062422s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0062505s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0062582s, 1152 KB] g=9, 15 evaluated, 14 expanded
[t=0.0063055s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0063155s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0063241s, 1152 KB] g=10, 17 evaluated, 16 expanded
[t=0.0063723s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0063816s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0063894s, 1152 KB] g=11, 19 evaluated, 18 expanded
[t=0.0064219s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0064303s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0064401s, 1152 KB] g=12, 20 evaluated, 19 expanded
[t=0.0064635s, 1152 KB] Solution found!
[t=0.0064729s, 1152 KB] Actual search time: 0.0008559s
load obj17 obj16 obj4 (1)
load obj17 obj13 obj4 (1)
load obj17 obj10 obj4 (1)
drive obj17 obj4 obj0 (1)
unload obj17 obj16 obj0 (1)
unload obj17 obj13 obj0 (1)
unload obj17 obj10 obj0 (1)
load obj11 obj12 obj5 (1)
fly obj11 obj5 obj0 (1)
load obj11 obj8 obj0 (1)
unload obj11 obj12 obj0 (1)
fly obj11 obj0 obj2 (1)
unload obj11 obj8 obj2 (1)
[t=0.0064811s, 1152 KB] Plan length: 13 step(s).
[t=0.0064811s, 1152 KB] Plan cost: 13
[t=0.0064811s, 1152 KB] Expanded 20 state(s).
[t=0.0064811s, 1152 KB] Reopened 0 state(s).
[t=0.0064811s, 1152 KB] Evaluated 21 state(s).
[t=0.0064811s, 1152 KB] Evaluations: 42
[t=0.0064811s, 1152 KB] Generated 184 state(s).
[t=0.0064811s, 1152 KB] Dead ends: 0 state(s).
[t=0.0064811s, 1152 KB] Number of registered states: 21
[t=0.0064811s, 1152 KB] Int hash set load factor: 21/32 = 0.65625
[t=0.0064811s, 1152 KB] Int hash set resizes: 5
[t=0.0064811s, 1152 KB] Search time: 0.0008912s
[t=0.0064811s, 1152 KB] Total time: 0.0064811s
Solution found.
search exit code: 0

