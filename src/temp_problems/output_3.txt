INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_3.pddl --sas-file temp_problems/sas_plan_3
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.004s wall-clock]
247 relevant atoms
104 auxiliary atoms
351 final queue length
409 total queue pushes
Completing instantiation... [0.000s CPU, 0.004s wall-clock]
Instantiating: [0.000s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
3 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.016s CPU, 0.005s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
102 of 102 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 59
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 102
Translator axioms: 0
Translator task size: 430
warning: could not determine peak memory
Writing output... [0.016s CPU, 0.004s wall-clock]
Done! [0.031s CPU, 0.040s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_3
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_3 < temp_problems/sas_plan_3
[t=3.31e-05s, 724 KB] reading input...
[t=0.0010902s, 744 KB] done reading input!
[t=0.0038738s, 1092 KB] Initializing landmark count heuristic...
[t=0.0039112s, 1100 KB] Generating landmark graph...
[t=0.0039385s, 1100 KB] Building a landmark graph with reasonable orders.
[t=0.0040771s, 1100 KB] Initializing Exploration...
[t=0.0042053s, 1112 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0049906s, 1148 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0050234s, 1148 KB] Landmarks generation time: 0.0009826s
[t=0.0050349s, 1148 KB] Discovered 27 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0050448s, 1148 KB] 47 edges
[t=0.005054s, 1148 KB] approx. reasonable orders
[t=0.0052377s, 1148 KB] approx. obedient reasonable orders
[t=0.0052977s, 1148 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0053101s, 1148 KB] Landmarks generation time: 0.0013943s
[t=0.0053196s, 1148 KB] Discovered 27 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0053294s, 1148 KB] 48 edges
[t=0.0053373s, 1148 KB] Landmark graph generation time: 0.0014299s
[t=0.0053466s, 1148 KB] Landmark graph contains 27 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0053564s, 1148 KB] Landmark graph contains 48 orderings.
[t=0.0054804s, 1148 KB] Simplifying 102 unary operators... done! [102 unary operators]
[t=0.0055628s, 1148 KB] time to simplify: 8.75e-05s
[t=0.0055948s, 1148 KB] Initializing additive heuristic...
[t=0.0056035s, 1148 KB] Initializing FF heuristic...
[t=0.0057159s, 1148 KB] Building successor generator...done!
[t=0.0058166s, 1148 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0058266s, 1148 KB] time for successor generation creation: 7.74e-05s
[t=0.0058395s, 1148 KB] Variables: 9
[t=0.0058475s, 1148 KB] FactPairs: 59
[t=0.005855s, 1148 KB] Bytes per state: 4
[t=0.0061921s, 1160 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0062123s, 1160 KB] 9 initial landmarks, 8 goal landmarks
[t=0.0062552s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0062657s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0062736s, 1160 KB] g=0, 1 evaluated, 0 expanded
[t=0.0063033s, 1160 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0063123s, 1160 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0064152s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0064271s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0064359s, 1160 KB] g=1, 4 evaluated, 3 expanded
[t=0.0065196s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0065316s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0065405s, 1160 KB] g=2, 7 evaluated, 6 expanded
[t=0.006623s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0066344s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0066429s, 1160 KB] g=3, 10 evaluated, 9 expanded
[t=0.006728s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0067378s, 1160 KB] g=5, 13 evaluated, 12 expanded
[t=0.0067714s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0067799s, 1160 KB] g=5, 14 evaluated, 13 expanded
[t=0.0069042s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0069136s, 1160 KB] g=6, 19 evaluated, 18 expanded
[t=0.0069439s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0069522s, 1160 KB] g=6, 20 evaluated, 19 expanded
[t=0.0070711s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.007082s, 1160 KB] g=7, 25 evaluated, 24 expanded
[t=0.0071185s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0071306s, 1160 KB] g=7, 26 evaluated, 25 expanded
[t=0.0072493s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0072621s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00727s, 1160 KB] g=8, 31 evaluated, 30 expanded
[t=0.007349s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0073597s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0073687s, 1160 KB] g=9, 34 evaluated, 33 expanded
[t=0.0074475s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0074586s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.007467s, 1160 KB] g=11, 37 evaluated, 36 expanded
[t=0.0075453s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0075568s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0075649s, 1160 KB] g=12, 40 evaluated, 39 expanded
[t=0.0076396s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0076499s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0076581s, 1160 KB] g=13, 43 evaluated, 42 expanded
[t=0.0077313s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0077432s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0077514s, 1160 KB] g=14, 46 evaluated, 45 expanded
[t=0.0078265s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0078388s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0078468s, 1160 KB] g=15, 49 evaluated, 48 expanded
[t=0.0078789s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0078892s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0078968s, 1160 KB] g=16, 50 evaluated, 49 expanded
[t=0.0079429s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.007953s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0079606s, 1160 KB] g=17, 52 evaluated, 51 expanded
[t=0.0080041s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0080116s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0080186s, 1160 KB] g=18, 54 evaluated, 53 expanded
[t=0.0080502s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0080588s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0080663s, 1160 KB] g=19, 55 evaluated, 54 expanded
[t=0.0080932s, 1160 KB] Solution found!
[t=0.0081033s, 1160 KB] Actual search time: 0.0018843s
load obj11 obj17 obj2 (1)
load obj11 obj15 obj2 (1)
load obj11 obj13 obj2 (1)
fly obj11 obj2 obj4 (1)
load obj11 obj7 obj4 (1)
unload obj11 obj17 obj4 (1)
load obj11 obj16 obj4 (1)
unload obj11 obj15 obj4 (1)
load obj11 obj12 obj4 (1)
fly obj11 obj4 obj0 (1)
unload obj11 obj7 obj0 (1)
load obj11 obj6 obj0 (1)
load obj11 obj14 obj0 (1)
unload obj11 obj13 obj0 (1)
unload obj11 obj12 obj0 (1)
fly obj11 obj0 obj2 (1)
unload obj11 obj16 obj2 (1)
unload obj11 obj14 obj2 (1)
fly obj11 obj2 obj4 (1)
unload obj11 obj6 obj4 (1)
[t=0.0081114s, 1160 KB] Plan length: 20 step(s).
[t=0.0081114s, 1160 KB] Plan cost: 20
[t=0.0081114s, 1160 KB] Expanded 55 state(s).
[t=0.0081114s, 1160 KB] Reopened 0 state(s).
[t=0.0081114s, 1160 KB] Evaluated 56 state(s).
[t=0.0081114s, 1160 KB] Evaluations: 112
[t=0.0081114s, 1160 KB] Generated 637 state(s).
[t=0.0081114s, 1160 KB] Dead ends: 0 state(s).
[t=0.0081114s, 1160 KB] Number of registered states: 56
[t=0.0081114s, 1160 KB] Int hash set load factor: 56/64 = 0.875
[t=0.0081114s, 1160 KB] Int hash set resizes: 6
[t=0.0081114s, 1160 KB] Search time: 0.001922s
[t=0.0081114s, 1160 KB] Total time: 0.0081114s
Solution found.
search exit code: 0

