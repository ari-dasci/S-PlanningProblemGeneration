INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_3.pddl --sas-file temp_problems/sas_plan_3
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.014s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
356 relevant atoms
154 auxiliary atoms
510 final queue length
665 total queue pushes
Completing instantiation... [0.000s CPU, 0.009s wall-clock]
Instantiating: [0.000s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.009s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
11 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
10 of 11 variables necessary.
0 of 11 mutex groups necessary.
170 of 198 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 59
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 170
Translator axioms: 0
Translator task size: 724
warning: could not determine peak memory
Writing output... [0.016s CPU, 0.007s wall-clock]
Done! [0.016s CPU, 0.064s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_3
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_3 < temp_problems/sas_plan_3
[t=3.14e-05s, 720 KB] reading input...
[t=0.0017151s, 752 KB] done reading input!
[t=0.0047621s, 1104 KB] Initializing landmark count heuristic...
[t=0.0047917s, 1112 KB] Generating landmark graph...
[t=0.0048325s, 1112 KB] Building a landmark graph with reasonable orders.
[t=0.0049446s, 1112 KB] Initializing Exploration...
[t=0.0051564s, 1132 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0061079s, 1152 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0061428s, 1152 KB] Landmarks generation time: 0.0012346s
[t=0.0061557s, 1152 KB] Discovered 16 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0061676s, 1152 KB] 19 edges
[t=0.006177s, 1152 KB] approx. reasonable orders
[t=0.0062217s, 1152 KB] approx. obedient reasonable orders
[t=0.0062457s, 1152 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0062561s, 1152 KB] Landmarks generation time: 0.0014577s
[t=0.0062658s, 1152 KB] Discovered 16 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0062761s, 1152 KB] 19 edges
[t=0.0062847s, 1152 KB] Landmark graph generation time: 0.0014973s
[t=0.0062934s, 1152 KB] Landmark graph contains 16 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0063034s, 1152 KB] Landmark graph contains 19 orderings.
[t=0.0064504s, 1152 KB] Simplifying 170 unary operators... done! [170 unary operators]
[t=0.0065821s, 1152 KB] time to simplify: 0.0001392s
[t=0.0066291s, 1152 KB] Initializing additive heuristic...
[t=0.006641s, 1152 KB] Initializing FF heuristic...
[t=0.0067582s, 1152 KB] Building successor generator...done!
[t=0.0069348s, 1160 KB] peak memory difference for successor generator creation: 8 KB
[t=0.0069468s, 1160 KB] time for successor generation creation: 0.0001505s
[t=0.0069613s, 1160 KB] Variables: 10
[t=0.0069705s, 1160 KB] FactPairs: 59
[t=0.0069791s, 1160 KB] Bytes per state: 4
[t=0.0073431s, 1180 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0073683s, 1180 KB] 5 initial landmarks, 5 goal landmarks
[t=0.0074157s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0074304s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0074395s, 1180 KB] g=0, 1 evaluated, 0 expanded
[t=0.0074726s, 1180 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0074837s, 1180 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0075844s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0076002s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0076098s, 1180 KB] g=1, 5 evaluated, 4 expanded
[t=0.0076697s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0076841s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0076933s, 1180 KB] g=2, 7 evaluated, 6 expanded
[t=0.0077299s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0077417s, 1180 KB] g=3, 8 evaluated, 7 expanded
[t=0.0077805s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0077928s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0078018s, 1180 KB] g=4, 9 evaluated, 8 expanded
[t=0.0078435s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.007863s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.007872s, 1180 KB] g=5, 10 evaluated, 9 expanded
[t=0.0079153s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0079259s, 1180 KB] g=6, 11 evaluated, 10 expanded
[t=0.0079652s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0079768s, 1180 KB] g=6, 12 evaluated, 11 expanded
[t=0.0080194s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.008036s, 1180 KB] g=7, 13 evaluated, 12 expanded
[t=0.0081347s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0081482s, 1180 KB] g=7, 16 evaluated, 15 expanded
[t=0.0081992s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0082124s, 1180 KB] g=8, 17 evaluated, 16 expanded
[t=0.0082578s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0082696s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0082785s, 1180 KB] g=9, 18 evaluated, 17 expanded
[t=0.0083499s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0083618s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0083708s, 1180 KB] g=10, 20 evaluated, 19 expanded
[t=0.0084371s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0084501s, 1180 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0084588s, 1180 KB] g=11, 22 evaluated, 21 expanded
[t=0.0084977s, 1180 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0085088s, 1180 KB] g=12, 23 evaluated, 22 expanded
[t=0.0085444s, 1180 KB] Solution found!
[t=0.0085561s, 1180 KB] Actual search time: 0.0011803s
load obj2 obj3 obj0 (1)
load obj2 obj11 obj0 (1)
drive obj2 obj0 obj4 (1)
unload obj2 obj3 obj4 (1)
unload obj2 obj11 obj4 (1)
load obj12 obj14 obj7 (1)
load obj12 obj10 obj7 (1)
drive obj12 obj7 obj15 (1)
load obj12 obj16 obj15 (1)
unload obj12 obj14 obj15 (1)
unload obj12 obj10 obj15 (1)
drive obj12 obj15 obj7 (1)
unload obj12 obj16 obj7 (1)
[t=0.0085659s, 1180 KB] Plan length: 13 step(s).
[t=0.0085659s, 1180 KB] Plan cost: 13
[t=0.0085659s, 1180 KB] Expanded 23 state(s).
[t=0.0085659s, 1180 KB] Reopened 0 state(s).
[t=0.0085659s, 1180 KB] Evaluated 24 state(s).
[t=0.0085659s, 1180 KB] Evaluations: 48
[t=0.0085659s, 1180 KB] Generated 390 state(s).
[t=0.0085659s, 1180 KB] Dead ends: 0 state(s).
[t=0.0085659s, 1180 KB] Number of registered states: 24
[t=0.0085659s, 1180 KB] Int hash set load factor: 24/32 = 0.75
[t=0.0085659s, 1180 KB] Int hash set resizes: 5
[t=0.0085659s, 1180 KB] Search time: 0.0012258s
[t=0.0085659s, 1180 KB] Total time: 0.0085659s
Solution found.
search exit code: 0

