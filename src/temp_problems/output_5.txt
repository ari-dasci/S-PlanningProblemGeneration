INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_5.pddl --sas-file temp_problems/sas_plan_5
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.003s wall-clock]
343 relevant atoms
140 auxiliary atoms
483 final queue length
627 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.000s CPU, 0.012s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.000s CPU, 0.005s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
11 of 11 variables necessary.
0 of 11 mutex groups necessary.
188 of 188 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 11
Translator derived variables: 0
Translator facts: 67
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 188
Translator axioms: 0
Translator task size: 803
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.013s wall-clock]
Done! [0.000s CPU, 0.040s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_5
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_5 < temp_problems/sas_plan_5
[t=1.21e-05s, 716 KB] reading input...
[t=0.0011118s, 752 KB] done reading input!
[t=0.0036678s, 1092 KB] Initializing landmark count heuristic...
[t=0.0037148s, 1100 KB] Generating landmark graph...
[t=0.0037504s, 1104 KB] Building a landmark graph with reasonable orders.
[t=0.0038667s, 1104 KB] Initializing Exploration...
[t=0.0040755s, 1128 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0049381s, 1168 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0049754s, 1168 KB] Landmarks generation time: 0.0011363s
[t=0.0049971s, 1168 KB] Discovered 22 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0050084s, 1168 KB] 21 edges
[t=0.0050233s, 1168 KB] approx. reasonable orders
[t=0.0051053s, 1168 KB] approx. obedient reasonable orders
[t=0.0051463s, 1168 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0051753s, 1168 KB] Landmarks generation time: 0.0014502s
[t=0.0051922s, 1168 KB] Discovered 22 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0052216s, 1168 KB] 21 edges
[t=0.0052367s, 1168 KB] Landmark graph generation time: 0.0015246s
[t=0.0052514s, 1168 KB] Landmark graph contains 22 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0052664s, 1168 KB] Landmark graph contains 21 orderings.
[t=0.0053606s, 1168 KB] Simplifying 188 unary operators... done! [188 unary operators]
[t=0.0054381s, 1168 KB] time to simplify: 8.07e-05s
[t=0.00546s, 1168 KB] Initializing additive heuristic...
[t=0.0054673s, 1168 KB] Initializing FF heuristic...
[t=0.0055274s, 1168 KB] Building successor generator...done!
[t=0.0056054s, 1168 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0056123s, 1168 KB] time for successor generation creation: 6.03e-05s
[t=0.0056212s, 1168 KB] Variables: 11
[t=0.0056301s, 1168 KB] FactPairs: 67
[t=0.0056389s, 1168 KB] Bytes per state: 4
[t=0.0059297s, 1188 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0059519s, 1188 KB] 7 initial landmarks, 7 goal landmarks
[t=0.0059838s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0059986s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0060086s, 1188 KB] g=0, 1 evaluated, 0 expanded
[t=0.0060372s, 1188 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0060469s, 1188 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0060664s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.006075s, 1188 KB] g=1, 2 evaluated, 1 expanded
[t=0.0061623s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0061737s, 1188 KB] g=1, 6 evaluated, 5 expanded
[t=0.006204s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0062136s, 1188 KB] g=2, 7 evaluated, 6 expanded
[t=0.0063104s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0063224s, 1188 KB] g=2, 12 evaluated, 11 expanded
[t=0.0063486s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0063568s, 1188 KB] g=3, 13 evaluated, 12 expanded
[t=0.0064678s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0064773s, 1188 KB] g=3, 18 evaluated, 17 expanded
[t=0.0065025s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0065117s, 1188 KB] g=4, 19 evaluated, 18 expanded
[t=0.0065382s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0065467s, 1188 KB] g=4, 20 evaluated, 19 expanded
[t=0.0065952s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0066074s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0066159s, 1188 KB] g=5, 22 evaluated, 21 expanded
[t=0.0066428s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0066594s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.006669s, 1188 KB] g=6, 23 evaluated, 22 expanded
[t=0.0066976s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0067062s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0067143s, 1188 KB] g=7, 24 evaluated, 23 expanded
[t=0.006758s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0067668s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0067813s, 1188 KB] g=8, 26 evaluated, 25 expanded
[t=0.0068345s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0068747s, 1188 KB] g=9, 27 evaluated, 26 expanded
[t=0.0069537s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.006963s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.006971s, 1188 KB] g=10, 31 evaluated, 30 expanded
[t=0.007017s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0070289s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0070356s, 1188 KB] g=11, 34 evaluated, 33 expanded
[t=0.0070786s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0070929s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0070995s, 1188 KB] g=12, 37 evaluated, 36 expanded
[t=0.0071383s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.007148s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0071554s, 1188 KB] g=13, 40 evaluated, 39 expanded
[t=0.0071728s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0071796s, 1188 KB] g=14, 41 evaluated, 40 expanded
[t=0.0072102s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0072168s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0072231s, 1188 KB] g=15, 43 evaluated, 42 expanded
[t=0.0072424s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0072491s, 1188 KB] g=16, 44 evaluated, 43 expanded
[t=0.0072672s, 1188 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0072737s, 1188 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0072809s, 1188 KB] g=17, 45 evaluated, 44 expanded
[t=0.0072993s, 1188 KB] Solution found!
[t=0.0073069s, 1188 KB] Actual search time: 0.0013456s
load obj6 obj8 obj0 (1)
load obj6 obj7 obj0 (1)
load obj6 obj2 obj0 (1)
fly obj6 obj0 obj14 (1)
unload obj6 obj8 obj14 (1)
unload obj6 obj7 obj14 (1)
unload obj6 obj2 obj14 (1)
load obj5 obj11 obj0 (1)
fly obj5 obj0 obj3 (1)
load obj5 obj9 obj3 (1)
load obj5 obj4 obj3 (1)
load obj5 obj12 obj3 (1)
unload obj5 obj11 obj3 (1)
fly obj5 obj3 obj0 (1)
unload obj5 obj12 obj0 (1)
fly obj5 obj0 obj14 (1)
unload obj5 obj9 obj14 (1)
unload obj5 obj4 obj14 (1)
[t=0.0073225s, 1188 KB] Plan length: 18 step(s).
[t=0.0073225s, 1188 KB] Plan cost: 18
[t=0.0073225s, 1188 KB] Expanded 45 state(s).
[t=0.0073225s, 1188 KB] Reopened 0 state(s).
[t=0.0073225s, 1188 KB] Evaluated 46 state(s).
[t=0.0073225s, 1188 KB] Evaluations: 92
[t=0.0073225s, 1188 KB] Generated 796 state(s).
[t=0.0073225s, 1188 KB] Dead ends: 0 state(s).
[t=0.0073225s, 1188 KB] Number of registered states: 46
[t=0.0073225s, 1188 KB] Int hash set load factor: 46/64 = 0.71875
[t=0.0073225s, 1188 KB] Int hash set resizes: 6
[t=0.0073225s, 1188 KB] Search time: 0.0013949s
[t=0.0073225s, 1188 KB] Total time: 0.0073225s
Solution found.
search exit code: 0

