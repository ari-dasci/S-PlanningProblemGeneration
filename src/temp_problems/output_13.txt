INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_13.pddl --sas-file temp_problems/sas_plan_13
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
308 relevant atoms
134 auxiliary atoms
442 final queue length
555 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
11 of 11 variables necessary.
0 of 11 mutex groups necessary.
154 of 154 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 11
Translator derived variables: 0
Translator facts: 64
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 154
Translator axioms: 0
Translator task size: 663
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_13
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_13 < temp_problems/sas_plan_13
[t=1e-05s, 796 KB] reading input...
[t=0.0008782s, 820 KB] done reading input!
[t=0.0024152s, 1160 KB] Initializing landmark count heuristic...
[t=0.0024394s, 1160 KB] Generating landmark graph...
[t=0.0024709s, 1160 KB] Building a landmark graph with reasonable orders.
[t=0.0026357s, 1168 KB] Initializing Exploration...
[t=0.0027907s, 1188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0031816s, 1204 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0032121s, 1204 KB] Landmarks generation time: 0.0006116s
[t=0.0032236s, 1204 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.003234s, 1204 KB] 6 edges
[t=0.0032431s, 1204 KB] approx. reasonable orders
[t=0.0032833s, 1204 KB] approx. obedient reasonable orders
[t=0.0033046s, 1204 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0033149s, 1204 KB] Landmarks generation time: 0.000863s
[t=0.0033249s, 1204 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0033349s, 1204 KB] 6 edges
[t=0.003344s, 1204 KB] Landmark graph generation time: 0.0009073s
[t=0.0033539s, 1204 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.003364s, 1204 KB] Landmark graph contains 6 orderings.
[t=0.0034577s, 1204 KB] Simplifying 154 unary operators... done! [154 unary operators]
[t=0.003536s, 1216 KB] time to simplify: 8.15e-05s
[t=0.0035617s, 1216 KB] Initializing additive heuristic...
[t=0.0035743s, 1216 KB] Initializing FF heuristic...
[t=0.0036428s, 1216 KB] Building successor generator...done!
[t=0.0037516s, 1216 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0037612s, 1216 KB] time for successor generation creation: 7.49e-05s
[t=0.0037712s, 1216 KB] Variables: 11
[t=0.0037795s, 1216 KB] FactPairs: 64
[t=0.0037872s, 1216 KB] Bytes per state: 4
[t=0.0040431s, 1236 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.004057s, 1236 KB] 6 initial landmarks, 6 goal landmarks
[t=0.0040843s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0040932s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0041021s, 1236 KB] g=0, 1 evaluated, 0 expanded
[t=0.0041365s, 1236 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0041456s, 1236 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0041865s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0041956s, 1236 KB] g=1, 3 evaluated, 2 expanded
[t=0.0042473s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0042563s, 1236 KB] g=2, 5 evaluated, 4 expanded
[t=0.0043504s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0043594s, 1236 KB] g=3, 9 evaluated, 8 expanded
[t=0.0044519s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0044633s, 1236 KB] g=4, 13 evaluated, 12 expanded
[t=0.0044862s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0044933s, 1236 KB] g=5, 14 evaluated, 13 expanded
[t=0.004541s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0045479s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0045545s, 1236 KB] g=6, 17 evaluated, 16 expanded
[t=0.0045822s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.004589s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0045974s, 1236 KB] g=7, 19 evaluated, 18 expanded
[t=0.0046234s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0046358s, 1236 KB] g=8, 21 evaluated, 20 expanded
[t=0.0046601s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0046669s, 1236 KB] g=8, 23 evaluated, 22 expanded
[t=0.004684s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0046922s, 1236 KB] g=9, 24 evaluated, 23 expanded
[t=0.0047269s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0047337s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0047402s, 1236 KB] g=10, 27 evaluated, 26 expanded
[t=0.004764s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0047707s, 1236 KB] g=11, 29 evaluated, 28 expanded
[t=0.0047875s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0047939s, 1236 KB] g=12, 30 evaluated, 29 expanded
[t=0.0048084s, 1236 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.004815s, 1236 KB] g=12, 31 evaluated, 30 expanded
[t=0.0048308s, 1236 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0048375s, 1236 KB] g=13, 32 evaluated, 31 expanded
[t=0.0048661s, 1236 KB] Solution found!
[t=0.0048734s, 1236 KB] Actual search time: 0.0008083s
load obj8 obj5 obj0 (1)
load obj8 obj16 obj0 (1)
load obj8 obj14 obj0 (1)
load obj8 obj13 obj0 (1)
fly obj8 obj0 obj9 (1)
unload obj8 obj5 obj9 (1)
unload obj8 obj16 obj9 (1)
load obj8 obj15 obj9 (1)
unload obj8 obj14 obj9 (1)
unload obj8 obj13 obj9 (1)
load obj8 obj12 obj9 (1)
fly obj8 obj9 obj0 (1)
unload obj8 obj15 obj0 (1)
unload obj8 obj12 obj0 (1)
[t=0.0048799s, 1236 KB] Plan length: 14 step(s).
[t=0.0048799s, 1236 KB] Plan cost: 14
[t=0.0048799s, 1236 KB] Expanded 33 state(s).
[t=0.0048799s, 1236 KB] Reopened 0 state(s).
[t=0.0048799s, 1236 KB] Evaluated 34 state(s).
[t=0.0048799s, 1236 KB] Evaluations: 68
[t=0.0048799s, 1236 KB] Generated 607 state(s).
[t=0.0048799s, 1236 KB] Dead ends: 0 state(s).
[t=0.0048799s, 1236 KB] Number of registered states: 34
[t=0.0048799s, 1236 KB] Int hash set load factor: 34/64 = 0.53125
[t=0.0048799s, 1236 KB] Int hash set resizes: 6
[t=0.0048799s, 1236 KB] Search time: 0.0008377s
[t=0.0048799s, 1236 KB] Total time: 0.0048799s
Solution found.
search exit code: 0

