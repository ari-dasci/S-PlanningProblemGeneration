INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_13.pddl --sas-file temp_problems/sas_plan_13
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.006s wall-clock]
328 relevant atoms
146 auxiliary atoms
474 final queue length
604 total queue pushes
Completing instantiation... [0.000s CPU, 0.006s wall-clock]
Instantiating: [0.000s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.016s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.016s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.009s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
174 of 174 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 174
Translator axioms: 0
Translator task size: 748
warning: could not determine peak memory
Writing output... [0.016s CPU, 0.006s wall-clock]
Done! [0.031s CPU, 0.051s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_13
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_13 < temp_problems/sas_plan_13
[t=1.71e-05s, 728 KB] reading input...
[t=0.0016594s, 760 KB] done reading input!
[t=0.0042549s, 1112 KB] Initializing landmark count heuristic...
[t=0.0042855s, 1112 KB] Generating landmark graph...
[t=0.0043183s, 1112 KB] Building a landmark graph with reasonable orders.
[t=0.0044097s, 1112 KB] Initializing Exploration...
[t=0.0045904s, 1132 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0053405s, 1156 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0053724s, 1156 KB] Landmarks generation time: 0.0009905s
[t=0.0053838s, 1156 KB] Discovered 15 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0053945s, 1156 KB] 18 edges
[t=0.0054039s, 1156 KB] approx. reasonable orders
[t=0.0054125s, 1156 KB] approx. obedient reasonable orders
[t=0.0054303s, 1156 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0054471s, 1156 KB] Landmarks generation time: 0.0011598s
[t=0.005459s, 1156 KB] Discovered 15 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.005468s, 1156 KB] 18 edges
[t=0.0054755s, 1156 KB] Landmark graph generation time: 0.0011937s
[t=0.0054844s, 1156 KB] Landmark graph contains 15 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0054941s, 1156 KB] Landmark graph contains 18 orderings.
[t=0.0056326s, 1156 KB] Simplifying 174 unary operators... done! [174 unary operators]
[t=0.0057399s, 1156 KB] time to simplify: 0.0001123s
[t=0.0057754s, 1156 KB] Initializing additive heuristic...
[t=0.0057823s, 1156 KB] Initializing FF heuristic...
[t=0.0058692s, 1156 KB] Building successor generator...done!
[t=0.0060055s, 1164 KB] peak memory difference for successor generator creation: 8 KB
[t=0.0060131s, 1164 KB] time for successor generation creation: 0.0001214s
[t=0.0060233s, 1164 KB] Variables: 10
[t=0.0060301s, 1164 KB] FactPairs: 66
[t=0.0060365s, 1164 KB] Bytes per state: 4
[t=0.0062973s, 1184 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0063127s, 1184 KB] 6 initial landmarks, 6 goal landmarks
[t=0.0063492s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0063594s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.006367s, 1184 KB] g=0, 1 evaluated, 0 expanded
[t=0.0063894s, 1184 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0063965s, 1184 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0064334s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0064408s, 1184 KB] g=1, 3 evaluated, 2 expanded
[t=0.0064895s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0064973s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0065049s, 1184 KB] g=2, 5 evaluated, 4 expanded
[t=0.0065531s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0065609s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0065677s, 1184 KB] g=3, 7 evaluated, 6 expanded
[t=0.0066002s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0066111s, 1184 KB] g=4, 8 evaluated, 7 expanded
[t=0.0066493s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0066611s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0066702s, 1184 KB] g=5, 9 evaluated, 8 expanded
[t=0.0067063s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0067161s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0067231s, 1184 KB] g=6, 10 evaluated, 9 expanded
[t=0.0067713s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0067791s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0067898s, 1184 KB] g=7, 12 evaluated, 11 expanded
[t=0.0068171s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0068242s, 1184 KB] g=8, 13 evaluated, 12 expanded
[t=0.0068515s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0068593s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0068664s, 1184 KB] g=9, 14 evaluated, 13 expanded
[t=0.00692s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0069363s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0069434s, 1184 KB] g=11, 16 evaluated, 15 expanded
[t=0.0069792s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0069868s, 1184 KB] g=12, 17 evaluated, 16 expanded
[t=0.0070141s, 1184 KB] Solution found!
[t=0.0070224s, 1184 KB] Actual search time: 0.0007042s
drive obj9 obj3 obj5 (1)
load obj9 obj15 obj5 (1)
load obj9 obj12 obj5 (1)
drive obj9 obj5 obj3 (1)
unload obj9 obj15 obj3 (1)
unload obj9 obj12 obj3 (1)
load obj6 obj13 obj2 (1)
drive obj6 obj2 obj0 (1)
unload obj6 obj13 obj0 (1)
fly obj10 obj0 obj5 (1)
load obj10 obj14 obj5 (1)
fly obj10 obj5 obj0 (1)
unload obj10 obj14 obj0 (1)
[t=0.0070295s, 1184 KB] Plan length: 13 step(s).
[t=0.0070295s, 1184 KB] Plan cost: 13
[t=0.0070295s, 1184 KB] Expanded 17 state(s).
[t=0.0070295s, 1184 KB] Reopened 0 state(s).
[t=0.0070295s, 1184 KB] Evaluated 18 state(s).
[t=0.0070295s, 1184 KB] Evaluations: 36
[t=0.0070295s, 1184 KB] Generated 230 state(s).
[t=0.0070295s, 1184 KB] Dead ends: 0 state(s).
[t=0.0070295s, 1184 KB] Number of registered states: 18
[t=0.0070295s, 1184 KB] Int hash set load factor: 18/32 = 0.5625
[t=0.0070295s, 1184 KB] Int hash set resizes: 5
[t=0.0070295s, 1184 KB] Search time: 0.0007338s
[t=0.0070295s, 1184 KB] Total time: 0.0070295s
Solution found.
search exit code: 0

