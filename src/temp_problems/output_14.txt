INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_14.pddl --sas-file temp_problems/sas_plan_14
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.002s wall-clock]
316 relevant atoms
158 auxiliary atoms
474 final queue length
605 total queue pushes
Completing instantiation... [0.000s CPU, 0.003s wall-clock]
Instantiating: [0.000s CPU, 0.007s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
7 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
7 of 7 variables necessary.
0 of 7 mutex groups necessary.
168 of 168 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 7
Translator derived variables: 0
Translator facts: 58
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 168
Translator axioms: 0
Translator task size: 685
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.000s CPU, 0.023s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_14
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_14 < temp_problems/sas_plan_14
[t=1.13e-05s, 732 KB] reading input...
[t=0.0005742s, 760 KB] done reading input!
[t=0.0017141s, 1100 KB] Initializing landmark count heuristic...
[t=0.0017359s, 1108 KB] Generating landmark graph...
[t=0.0017575s, 1112 KB] Building a landmark graph with reasonable orders.
[t=0.0018129s, 1112 KB] Initializing Exploration...
[t=0.0018901s, 1128 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0021683s, 1152 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0021815s, 1152 KB] Landmarks generation time: 0.0003835s
[t=0.0021899s, 1152 KB] Discovered 14 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0021974s, 1152 KB] 14 edges
[t=0.0022046s, 1152 KB] approx. reasonable orders
[t=0.0022115s, 1152 KB] approx. obedient reasonable orders
[t=0.0022227s, 1152 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0022295s, 1152 KB] Landmarks generation time: 0.0004875s
[t=0.0022373s, 1152 KB] Discovered 14 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0022468s, 1152 KB] 14 edges
[t=0.0022534s, 1152 KB] Landmark graph generation time: 0.0005194s
[t=0.0022605s, 1152 KB] Landmark graph contains 14 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0022677s, 1152 KB] Landmark graph contains 14 orderings.
[t=0.0023339s, 1152 KB] Simplifying 168 unary operators... done! [168 unary operators]
[t=0.0023937s, 1152 KB] time to simplify: 6.18e-05s
[t=0.0024141s, 1152 KB] Initializing additive heuristic...
[t=0.0024236s, 1152 KB] Initializing FF heuristic...
[t=0.0024719s, 1152 KB] Building successor generator...done!
[t=0.00253s, 1152 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0025366s, 1152 KB] time for successor generation creation: 4.52e-05s
[t=0.0025446s, 1152 KB] Variables: 7
[t=0.002552s, 1152 KB] FactPairs: 58
[t=0.0025588s, 1152 KB] Bytes per state: 4
[t=0.0027552s, 1172 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0027792s, 1172 KB] 5 initial landmarks, 4 goal landmarks
[t=0.0028011s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0028083s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0028152s, 1172 KB] g=0, 1 evaluated, 0 expanded
[t=0.0028316s, 1172 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0028387s, 1172 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0028721s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0028796s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0028864s, 1172 KB] g=1, 4 evaluated, 3 expanded
[t=0.0029036s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0029105s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0029169s, 1172 KB] g=2, 5 evaluated, 4 expanded
[t=0.0029343s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0029411s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0029514s, 1172 KB] g=3, 6 evaluated, 5 expanded
[t=0.0029682s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0029749s, 1172 KB] g=4, 7 evaluated, 6 expanded
[t=0.0030002s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0030069s, 1172 KB] g=4, 9 evaluated, 8 expanded
[t=0.0030231s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0030299s, 1172 KB] g=5, 10 evaluated, 9 expanded
[t=0.0030543s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0030609s, 1172 KB] g=5, 12 evaluated, 11 expanded
[t=0.0030764s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0045047s, 1172 KB] g=6, 13 evaluated, 12 expanded
[t=0.004548s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0045619s, 1172 KB] g=6, 14 evaluated, 13 expanded
[t=0.0045883s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0045991s, 1172 KB] g=7, 15 evaluated, 14 expanded
[t=0.0046518s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0046708s, 1172 KB] g=7, 18 evaluated, 17 expanded
[t=0.0046938s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0047028s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0047115s, 1172 KB] g=8, 19 evaluated, 18 expanded
[t=0.0047307s, 1172 KB] Solution found!
[t=0.0047403s, 1172 KB] Actual search time: 0.0019551s
load obj6 obj11 obj5 (1)
drive obj6 obj5 obj10 (1)
unload obj6 obj11 obj10 (1)
load obj4 obj8 obj2 (1)
load obj4 obj7 obj2 (1)
fly obj4 obj2 obj13 (1)
unload obj4 obj8 obj13 (1)
fly obj4 obj13 obj16 (1)
unload obj4 obj7 obj16 (1)
[t=0.0047485s, 1172 KB] Plan length: 9 step(s).
[t=0.0047485s, 1172 KB] Plan cost: 9
[t=0.0047485s, 1172 KB] Expanded 19 state(s).
[t=0.0047485s, 1172 KB] Reopened 0 state(s).
[t=0.0047485s, 1172 KB] Evaluated 20 state(s).
[t=0.0047485s, 1172 KB] Evaluations: 40
[t=0.0047485s, 1172 KB] Generated 254 state(s).
[t=0.0047485s, 1172 KB] Dead ends: 0 state(s).
[t=0.0047485s, 1172 KB] Number of registered states: 20
[t=0.0047485s, 1172 KB] Int hash set load factor: 20/32 = 0.625
[t=0.0047485s, 1172 KB] Int hash set resizes: 5
[t=0.0047485s, 1172 KB] Search time: 0.0019939s
[t=0.0047485s, 1172 KB] Total time: 0.0047485s
Solution found.
search exit code: 0

