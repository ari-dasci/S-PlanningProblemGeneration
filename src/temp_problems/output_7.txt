INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_7.pddl --sas-file temp_problems/sas_plan_7
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.008s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
281 relevant atoms
136 auxiliary atoms
417 final queue length
510 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.000s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.000s CPU, 0.008s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
11 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
11 of 11 variables necessary.
0 of 11 mutex groups necessary.
132 of 132 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 11
Translator derived variables: 0
Translator facts: 62
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 132
Translator axioms: 0
Translator task size: 594
warning: could not determine peak memory
Writing output... [0.016s CPU, 0.006s wall-clock]
Done! [0.016s CPU, 0.048s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_7
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_7 < temp_problems/sas_plan_7
[t=1.99e-05s, 720 KB] reading input...
[t=0.0010717s, 744 KB] done reading input!
[t=0.003621s, 1092 KB] Initializing landmark count heuristic...
[t=0.0036493s, 1100 KB] Generating landmark graph...
[t=0.0036825s, 1100 KB] Building a landmark graph with reasonable orders.
[t=0.0037636s, 1108 KB] Initializing Exploration...
[t=0.0039226s, 1124 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0046298s, 1144 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0046689s, 1144 KB] Landmarks generation time: 0.0009338s
[t=0.0046805s, 1144 KB] Discovered 16 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0046904s, 1144 KB] 19 edges
[t=0.0046991s, 1144 KB] approx. reasonable orders
[t=0.0047434s, 1144 KB] approx. obedient reasonable orders
[t=0.0047633s, 1144 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0047725s, 1144 KB] Landmarks generation time: 0.0011189s
[t=0.0047813s, 1144 KB] Discovered 16 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0047911s, 1144 KB] 19 edges
[t=0.0047985s, 1144 KB] Landmark graph generation time: 0.0011529s
[t=0.0048075s, 1144 KB] Landmark graph contains 16 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.0048167s, 1144 KB] Landmark graph contains 19 orderings.
[t=0.0049616s, 1144 KB] Simplifying 132 unary operators... done! [132 unary operators]
[t=0.0051082s, 1164 KB] time to simplify: 0.0001529s
[t=0.0051559s, 1164 KB] Initializing additive heuristic...
[t=0.005169s, 1164 KB] Initializing FF heuristic...
[t=0.0052699s, 1164 KB] Building successor generator...done!
[t=0.0054201s, 1164 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0054304s, 1164 KB] time for successor generation creation: 0.0001254s
[t=0.0054501s, 1164 KB] Variables: 11
[t=0.0054589s, 1164 KB] FactPairs: 62
[t=0.0054664s, 1164 KB] Bytes per state: 4
[t=0.0057731s, 1184 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0057937s, 1184 KB] 5 initial landmarks, 5 goal landmarks
[t=0.0058323s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0058446s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0058536s, 1184 KB] g=0, 1 evaluated, 0 expanded
[t=0.0058844s, 1184 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0058943s, 1184 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0059161s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0059254s, 1184 KB] g=1, 2 evaluated, 1 expanded
[t=0.005964s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0059739s, 1184 KB] g=1, 3 evaluated, 2 expanded
[t=0.0060084s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0060191s, 1184 KB] g=2, 4 evaluated, 3 expanded
[t=0.0060814s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0060944s, 1184 KB] g=3, 6 evaluated, 5 expanded
[t=0.0061544s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0061656s, 1184 KB] g=4, 8 evaluated, 7 expanded
[t=0.0062023s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0062111s, 1184 KB] g=3, 9 evaluated, 8 expanded
[t=0.0062903s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0063013s, 1184 KB] g=5, 12 evaluated, 11 expanded
[t=0.0063559s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.006367s, 1184 KB] g=6, 14 evaluated, 13 expanded
[t=0.0064087s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.006419s, 1184 KB] g=6, 15 evaluated, 14 expanded
[t=0.0064513s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0064607s, 1184 KB] g=7, 16 evaluated, 15 expanded
[t=0.0065342s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.006548s, 1184 KB] g=7, 17 evaluated, 16 expanded
[t=0.0065989s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0066122s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0066271s, 1184 KB] g=8, 19 evaluated, 18 expanded
[t=0.0066635s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0066734s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0066816s, 1184 KB] g=9, 20 evaluated, 19 expanded
[t=0.006737s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0067476s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0067562s, 1184 KB] g=10, 22 evaluated, 21 expanded
[t=0.0067905s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0067996s, 1184 KB] g=11, 23 evaluated, 22 expanded
[t=0.0068466s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0068587s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0068664s, 1184 KB] g=12, 24 evaluated, 23 expanded
[t=0.0069325s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0069443s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0069521s, 1184 KB] g=13, 26 evaluated, 25 expanded
[t=0.0069867s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0069961s, 1184 KB] g=14, 27 evaluated, 26 expanded
[t=0.0070292s, 1184 KB] Solution found!
[t=0.0070397s, 1184 KB] Actual search time: 0.0012398s
fly obj9 obj2 obj0 (1)
load obj9 obj10 obj0 (1)
fly obj9 obj0 obj2 (1)
load obj9 obj5 obj2 (1)
load obj9 obj13 obj2 (1)
unload obj9 obj10 obj2 (1)
fly obj9 obj2 obj0 (1)
unload obj9 obj5 obj0 (1)
unload obj9 obj13 obj0 (1)
load obj16 obj11 obj6 (1)
drive obj16 obj6 obj0 (1)
unload obj16 obj11 obj0 (1)
load obj15 obj14 obj4 (1)
drive obj15 obj4 obj2 (1)
unload obj15 obj14 obj2 (1)
[t=0.0070478s, 1184 KB] Plan length: 15 step(s).
[t=0.0070478s, 1184 KB] Plan cost: 15
[t=0.0070478s, 1184 KB] Expanded 27 state(s).
[t=0.0070478s, 1184 KB] Reopened 0 state(s).
[t=0.0070478s, 1184 KB] Evaluated 28 state(s).
[t=0.0070478s, 1184 KB] Evaluations: 56
[t=0.0070478s, 1184 KB] Generated 376 state(s).
[t=0.0070478s, 1184 KB] Dead ends: 0 state(s).
[t=0.0070478s, 1184 KB] Number of registered states: 28
[t=0.0070478s, 1184 KB] Int hash set load factor: 28/32 = 0.875
[t=0.0070478s, 1184 KB] Int hash set resizes: 5
[t=0.0070478s, 1184 KB] Search time: 0.0012772s
[t=0.0070478s, 1184 KB] Total time: 0.0070478s
Solution found.
search exit code: 0

