INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_7.pddl --sas-file temp_problems/sas_plan_7
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
499 relevant atoms
196 auxiliary atoms
695 final queue length
908 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.000s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.004s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 13 mutex groups necessary.
290 of 290 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 9
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 290
Translator axioms: 0
Translator task size: 1248
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.000s CPU, 0.030s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_7
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_7 < temp_problems/sas_plan_7
[t=2.1e-05s, 740 KB] reading input...
[t=0.0012019s, 800 KB] done reading input!
[t=0.0024905s, 1152 KB] Initializing landmark count heuristic...
[t=0.0025093s, 1152 KB] Generating landmark graph...
[t=0.0025338s, 1152 KB] Building a landmark graph with reasonable orders.
[t=0.0026068s, 1152 KB] Initializing Exploration...
[t=0.0027418s, 1184 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0036317s, 1240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0036662s, 1240 KB] Landmarks generation time: 0.0010792s
[t=0.0036748s, 1240 KB] Discovered 31 landmarks, of which 10 are disjunctive and 0 are conjunctive.
[t=0.0036821s, 1240 KB] 41 edges
[t=0.0036886s, 1240 KB] approx. reasonable orders
[t=0.0037476s, 1240 KB] approx. obedient reasonable orders
[t=0.0038006s, 1240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0038086s, 1240 KB] Landmarks generation time: 0.0012937s
[t=0.0038162s, 1240 KB] Discovered 31 landmarks, of which 10 are disjunctive and 0 are conjunctive.
[t=0.003823s, 1240 KB] 41 edges
[t=0.0038297s, 1240 KB] Landmark graph generation time: 0.0013222s
[t=0.0038364s, 1240 KB] Landmark graph contains 31 landmarks, of which 10 are disjunctive and 0 are conjunctive.
[t=0.0038432s, 1240 KB] Landmark graph contains 41 orderings.
[t=0.0039465s, 1240 KB] Simplifying 290 unary operators... done! [290 unary operators]
[t=0.0040397s, 1240 KB] time to simplify: 9.57e-05s
[t=0.0040747s, 1240 KB] Initializing additive heuristic...
[t=0.0040814s, 1240 KB] Initializing FF heuristic...
[t=0.0041404s, 1240 KB] Building successor generator...done!
[t=0.0042503s, 1248 KB] peak memory difference for successor generator creation: 8 KB
[t=0.0042568s, 1248 KB] time for successor generation creation: 9.63e-05s
[t=0.0042656s, 1248 KB] Variables: 13
[t=0.004272s, 1248 KB] FactPairs: 104
[t=0.0042781s, 1248 KB] Bytes per state: 8
[t=0.0044559s, 1268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0044666s, 1268 KB] 10 initial landmarks, 9 goal landmarks
[t=0.0045017s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0045119s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0045209s, 1268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0045491s, 1268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0045736s, 1268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0046157s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0046257s, 1268 KB] g=1, 3 evaluated, 2 expanded
[t=0.0046726s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0046803s, 1268 KB] g=1, 5 evaluated, 4 expanded
[t=0.0047014s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0047078s, 1268 KB] g=2, 6 evaluated, 5 expanded
[t=0.0047414s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0047486s, 1268 KB] g=3, 8 evaluated, 7 expanded
[t=0.0047808s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0047937s, 1268 KB] g=4, 9 evaluated, 8 expanded
[t=0.0048268s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0048366s, 1268 KB] g=3, 10 evaluated, 9 expanded
[t=0.0049234s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.004936s, 1268 KB] g=5, 13 evaluated, 12 expanded
[t=0.0049905s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0049988s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0050056s, 1268 KB] g=6, 15 evaluated, 14 expanded
[t=0.0050586s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0050661s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0051184s, 1268 KB] g=7, 17 evaluated, 16 expanded
[t=0.0051757s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0051837s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0051904s, 1268 KB] g=8, 19 evaluated, 18 expanded
[t=0.0052285s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.005235s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0052412s, 1268 KB] g=9, 21 evaluated, 20 expanded
[t=0.0052772s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0052837s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0052897s, 1268 KB] g=10, 23 evaluated, 22 expanded
[t=0.0053149s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0053284s, 1268 KB] g=11, 24 evaluated, 23 expanded
[t=0.0053623s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.005382s, 1268 KB] g=12, 25 evaluated, 24 expanded
[t=0.0054139s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0054241s, 1268 KB] g=12, 26 evaluated, 25 expanded
[t=0.0054762s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.00549s, 1268 KB] g=13, 28 evaluated, 27 expanded
[t=0.0055344s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0055456s, 1268 KB] g=13, 29 evaluated, 28 expanded
[t=0.0055938s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0056029s, 1268 KB] g=14, 31 evaluated, 30 expanded
[t=0.0056584s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0056719s, 1268 KB] g=14, 32 evaluated, 31 expanded
[t=0.0056983s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0057049s, 1268 KB] g=15, 33 evaluated, 32 expanded
[t=0.0057683s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0057768s, 1268 KB] g=15, 36 evaluated, 35 expanded
[t=0.005818s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0058277s, 1268 KB] g=16, 38 evaluated, 37 expanded
[t=0.0058498s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0058561s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.005862s, 1268 KB] g=17, 39 evaluated, 38 expanded
[t=0.0058913s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0058995s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.005908s, 1268 KB] g=18, 41 evaluated, 40 expanded
[t=0.0059408s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0059469s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0059529s, 1268 KB] g=19, 43 evaluated, 42 expanded
[t=0.0059716s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0059792s, 1268 KB] g=20, 44 evaluated, 43 expanded
[t=0.0060011s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0060073s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0060132s, 1268 KB] g=21, 45 evaluated, 44 expanded
[t=0.0060388s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0060458s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0060518s, 1268 KB] g=22, 46 evaluated, 45 expanded
[t=0.0060788s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0060847s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0060905s, 1268 KB] g=23, 48 evaluated, 47 expanded
[t=0.0061093s, 1268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0061152s, 1268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0061211s, 1268 KB] g=24, 49 evaluated, 48 expanded
[t=0.0061363s, 1268 KB] Solution found!
[t=0.006143s, 1268 KB] Actual search time: 0.0016669s
drive obj3 obj0 obj5 (1)
load obj3 obj9 obj5 (1)
drive obj3 obj5 obj14 (1)
unload obj3 obj9 obj14 (1)
load obj20 obj18 obj14 (1)
fly obj20 obj14 obj6 (1)
load obj20 obj8 obj6 (1)
unload obj20 obj18 obj6 (1)
load obj20 obj17 obj6 (1)
load obj20 obj16 obj6 (1)
fly obj20 obj6 obj0 (1)
unload obj20 obj8 obj0 (1)
load obj20 obj4 obj0 (1)
unload obj20 obj17 obj0 (1)
unload obj20 obj16 obj0 (1)
fly obj20 obj0 obj5 (1)
unload obj20 obj4 obj5 (1)
load obj2 obj15 obj0 (1)
load obj2 obj11 obj0 (1)
fly obj2 obj0 obj5 (1)
unload obj2 obj15 obj5 (1)
unload obj2 obj11 obj5 (1)
load obj12 obj10 obj6 (1)
drive obj12 obj6 obj19 (1)
unload obj12 obj10 obj19 (1)
[t=0.0061491s, 1268 KB] Plan length: 25 step(s).
[t=0.0061491s, 1268 KB] Plan cost: 25
[t=0.0061491s, 1268 KB] Expanded 49 state(s).
[t=0.0061491s, 1268 KB] Reopened 0 state(s).
[t=0.0061491s, 1268 KB] Evaluated 50 state(s).
[t=0.0061491s, 1268 KB] Evaluations: 100
[t=0.0061491s, 1268 KB] Generated 977 state(s).
[t=0.0061491s, 1268 KB] Dead ends: 0 state(s).
[t=0.0061491s, 1268 KB] Number of registered states: 50
[t=0.0061491s, 1268 KB] Int hash set load factor: 50/64 = 0.78125
[t=0.0061491s, 1268 KB] Int hash set resizes: 6
[t=0.0061491s, 1268 KB] Search time: 0.001694s
[t=0.0061491s, 1268 KB] Total time: 0.0061491s
Solution found.
search exit code: 0

