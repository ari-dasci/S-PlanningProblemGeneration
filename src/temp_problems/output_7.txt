INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_7.pddl --sas-file temp_problems/sas_plan_7
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
220 relevant atoms
130 auxiliary atoms
350 final queue length
427 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.016s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
5 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
5 of 5 variables necessary.
0 of 5 mutex groups necessary.
98 of 98 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 5
Translator derived variables: 0
Translator facts: 38
Translator goal facts: 2
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 98
Translator axioms: 0
Translator task size: 387
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_7
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_7 < temp_problems/sas_plan_7
[t=1.17e-05s, 788 KB] reading input...
[t=0.0005247s, 800 KB] done reading input!
[t=0.0018517s, 1144 KB] Initializing landmark count heuristic...
[t=0.0018732s, 1144 KB] Generating landmark graph...
[t=0.0018947s, 1144 KB] Building a landmark graph with reasonable orders.
[t=0.0019583s, 1144 KB] Initializing Exploration...
[t=0.0020336s, 1160 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0026119s, 1192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0026287s, 1192 KB] Landmarks generation time: 0.0006839s
[t=0.0026439s, 1192 KB] Discovered 22 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0026538s, 1192 KB] 74 edges
[t=0.002663s, 1192 KB] approx. reasonable orders
[t=0.0027238s, 1192 KB] approx. obedient reasonable orders
[t=0.0027776s, 1192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0027872s, 1192 KB] Landmarks generation time: 0.0009038s
[t=0.0027969s, 1192 KB] Discovered 22 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0028063s, 1192 KB] 74 edges
[t=0.002827s, 1192 KB] Landmark graph generation time: 0.0009572s
[t=0.0028371s, 1192 KB] Landmark graph contains 22 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0028482s, 1192 KB] Landmark graph contains 74 orderings.
[t=0.0029405s, 1192 KB] Simplifying 98 unary operators... done! [98 unary operators]
[t=0.0030131s, 1192 KB] time to simplify: 7.83e-05s
[t=0.0030355s, 1192 KB] Initializing additive heuristic...
[t=0.0030428s, 1192 KB] Initializing FF heuristic...
[t=0.0030966s, 1192 KB] Building successor generator...done!
[t=0.0031404s, 1192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0031476s, 1192 KB] time for successor generation creation: 2.54e-05s
[t=0.0031618s, 1192 KB] Variables: 5
[t=0.0031687s, 1192 KB] FactPairs: 38
[t=0.003175s, 1192 KB] Bytes per state: 4
[t=0.0033657s, 1212 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0033754s, 1212 KB] 5 initial landmarks, 2 goal landmarks
[t=0.0033951s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0034023s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.003411s, 1212 KB] g=0, 1 evaluated, 0 expanded
[t=0.0034243s, 1212 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0034312s, 1212 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.003597s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0036062s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0036132s, 1212 KB] g=2, 21 evaluated, 20 expanded
[t=0.0036369s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0036435s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0036501s, 1212 KB] g=3, 23 evaluated, 22 expanded
[t=0.0037216s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0037283s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0037352s, 1212 KB] g=5, 31 evaluated, 30 expanded
[t=0.0037606s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0037671s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0037736s, 1212 KB] g=6, 33 evaluated, 32 expanded
[t=0.0038192s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0038258s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0038322s, 1212 KB] g=8, 38 evaluated, 37 expanded
[t=0.0038796s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0038901s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0038981s, 1212 KB] g=9, 43 evaluated, 42 expanded
[t=0.0039861s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.003993s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0039994s, 1212 KB] g=11, 53 evaluated, 52 expanded
[t=0.0040275s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0040343s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0040407s, 1212 KB] g=12, 56 evaluated, 55 expanded
[t=0.0040991s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0041058s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0041122s, 1212 KB] g=14, 63 evaluated, 62 expanded
[t=0.0041466s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0041532s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0041595s, 1212 KB] g=15, 66 evaluated, 65 expanded
[t=0.0041893s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0041961s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0042027s, 1212 KB] g=16, 69 evaluated, 68 expanded
[t=0.0042239s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0042306s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0042374s, 1212 KB] g=17, 71 evaluated, 70 expanded
[t=0.0042512s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0042579s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0042646s, 1212 KB] g=18, 72 evaluated, 71 expanded
[t=0.0042785s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0042866s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0042931s, 1212 KB] g=19, 73 evaluated, 72 expanded
[t=0.0043134s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0043213s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.004328s, 1212 KB] g=20, 75 evaluated, 74 expanded
[t=0.0043424s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.004349s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0043554s, 1212 KB] g=21, 76 evaluated, 75 expanded
[t=0.0043687s, 1212 KB] Solution found!
[t=0.0043774s, 1212 KB] Actual search time: 0.0009961s
drive obj5 obj2 obj8 (1)
load obj5 obj12 obj8 (1)
drive obj5 obj8 obj15 (1)
drive obj5 obj15 obj2 (1)
unload obj5 obj12 obj2 (1)
load obj6 obj12 obj2 (1)
fly obj6 obj2 obj0 (1)
unload obj6 obj12 obj0 (1)
load obj4 obj12 obj0 (1)
drive obj4 obj0 obj7 (1)
unload obj4 obj12 obj7 (1)
drive obj4 obj7 obj0 (1)
drive obj4 obj0 obj9 (1)
load obj4 obj16 obj9 (1)
drive obj4 obj9 obj0 (1)
unload obj4 obj16 obj0 (1)
load obj6 obj16 obj0 (1)
fly obj6 obj0 obj2 (1)
unload obj6 obj16 obj2 (1)
load obj5 obj16 obj2 (1)
drive obj5 obj2 obj15 (1)
unload obj5 obj16 obj15 (1)
[t=0.0043839s, 1212 KB] Plan length: 22 step(s).
[t=0.0043839s, 1212 KB] Plan cost: 22
[t=0.0043839s, 1212 KB] Expanded 76 state(s).
[t=0.0043839s, 1212 KB] Reopened 0 state(s).
[t=0.0043839s, 1212 KB] Evaluated 77 state(s).
[t=0.0043839s, 1212 KB] Evaluations: 154
[t=0.0043839s, 1212 KB] Generated 753 state(s).
[t=0.0043839s, 1212 KB] Dead ends: 0 state(s).
[t=0.0043839s, 1212 KB] Number of registered states: 77
[t=0.0043839s, 1212 KB] Int hash set load factor: 77/128 = 0.601562
[t=0.0043839s, 1212 KB] Int hash set resizes: 7
[t=0.0043839s, 1212 KB] Search time: 0.0010189s
[t=0.0043839s, 1212 KB] Total time: 0.0043839s
Solution found.
search exit code: 0

