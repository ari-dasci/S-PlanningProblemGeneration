INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_19.pddl --sas-file temp_problems/sas_plan_19
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
283 relevant atoms
131 auxiliary atoms
414 final queue length
506 total queue pushes
Completing instantiation... [0.000s CPU, 0.007s wall-clock]
Instantiating: [0.000s CPU, 0.007s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
9 of 10 variables necessary.
0 of 10 mutex groups necessary.
116 of 136 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 55
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 116
Translator axioms: 0
Translator task size: 517
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.000s CPU, 0.017s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_19
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_19 < temp_problems/sas_plan_19
[t=8.4e-06s, 796 KB] reading input...
[t=0.000449s, 812 KB] done reading input!
[t=0.0016656s, 1152 KB] Initializing landmark count heuristic...
[t=0.0016855s, 1152 KB] Generating landmark graph...
[t=0.0016996s, 1152 KB] Building a landmark graph with reasonable orders.
[t=0.0017565s, 1152 KB] Initializing Exploration...
[t=0.0018258s, 1168 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0022583s, 1208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0022706s, 1208 KB] Landmarks generation time: 0.0005276s
[t=0.0022782s, 1208 KB] Discovered 29 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0022856s, 1208 KB] 65 edges
[t=0.0022923s, 1208 KB] approx. reasonable orders
[t=0.0023317s, 1208 KB] approx. obedient reasonable orders
[t=0.0023472s, 1208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0023542s, 1208 KB] Landmarks generation time: 0.0006629s
[t=0.002361s, 1208 KB] Discovered 29 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023678s, 1208 KB] 65 edges
[t=0.0023738s, 1208 KB] Landmark graph generation time: 0.0006902s
[t=0.0023807s, 1208 KB] Landmark graph contains 29 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023877s, 1208 KB] Landmark graph contains 65 orderings.
[t=0.0024456s, 1208 KB] Simplifying 116 unary operators... done! [116 unary operators]
[t=0.0024886s, 1208 KB] time to simplify: 4.5e-05s
[t=0.0025062s, 1208 KB] Initializing additive heuristic...
[t=0.0025127s, 1208 KB] Initializing FF heuristic...
[t=0.0025585s, 1208 KB] Building successor generator...done!
[t=0.0026098s, 1208 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0026166s, 1208 KB] time for successor generation creation: 3.87e-05s
[t=0.0026243s, 1208 KB] Variables: 9
[t=0.0026306s, 1208 KB] FactPairs: 55
[t=0.002637s, 1208 KB] Bytes per state: 4
[t=0.0028309s, 1232 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0028421s, 1232 KB] 7 initial landmarks, 5 goal landmarks
[t=0.002863s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0028702s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0028766s, 1232 KB] g=0, 1 evaluated, 0 expanded
[t=0.0028932s, 1232 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0028999s, 1232 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0029131s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0029197s, 1232 KB] g=1, 2 evaluated, 1 expanded
[t=0.0029579s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0029644s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0029708s, 1232 KB] g=2, 5 evaluated, 4 expanded
[t=0.0029976s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0030042s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0030109s, 1232 KB] g=3, 7 evaluated, 6 expanded
[t=0.0030487s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0030555s, 1232 KB] g=4, 10 evaluated, 9 expanded
[t=0.0030973s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.003104s, 1232 KB] g=4, 14 evaluated, 13 expanded
[t=0.0031454s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0031522s, 1232 KB] g=5, 18 evaluated, 17 expanded
[t=0.0031937s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0032003s, 1232 KB] g=6, 22 evaluated, 21 expanded
[t=0.0032406s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0032477s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0032609s, 1232 KB] g=7, 26 evaluated, 25 expanded
[t=0.0032873s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0032938s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0033004s, 1232 KB] g=8, 28 evaluated, 27 expanded
[t=0.0033259s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0033323s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0033386s, 1232 KB] g=9, 30 evaluated, 29 expanded
[t=0.0033547s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0033612s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0033676s, 1232 KB] g=10, 31 evaluated, 30 expanded
[t=0.003384s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0033904s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0033966s, 1232 KB] g=11, 32 evaluated, 31 expanded
[t=0.0034148s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0034213s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0034277s, 1232 KB] g=12, 33 evaluated, 32 expanded
[t=0.0034518s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0034583s, 1232 KB] g=13, 35 evaluated, 34 expanded
[t=0.0034827s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0034892s, 1232 KB] g=13, 37 evaluated, 36 expanded
[t=0.0035212s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0035277s, 1232 KB] g=14, 40 evaluated, 39 expanded
[t=0.0035434s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0035497s, 1232 KB] g=14, 41 evaluated, 40 expanded
[t=0.0035647s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0035713s, 1232 KB] g=15, 42 evaluated, 41 expanded
[t=0.0035932s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0035997s, 1232 KB] g=16, 44 evaluated, 43 expanded
[t=0.0036153s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0036217s, 1232 KB] g=16, 45 evaluated, 44 expanded
[t=0.0036369s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0036433s, 1232 KB] g=17, 46 evaluated, 45 expanded
[t=0.0036578s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0036642s, 1232 KB] g=17, 47 evaluated, 46 expanded
[t=0.0036857s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0036922s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0036985s, 1232 KB] g=18, 49 evaluated, 48 expanded
[t=0.0037208s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0037274s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0037338s, 1232 KB] g=19, 51 evaluated, 50 expanded
[t=0.0037547s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.003761s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0037674s, 1232 KB] g=20, 53 evaluated, 52 expanded
[t=0.0037835s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0037904s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0037967s, 1232 KB] g=21, 54 evaluated, 53 expanded
[t=0.0038107s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0038172s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0038235s, 1232 KB] g=22, 55 evaluated, 54 expanded
[t=0.0038373s, 1232 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0038437s, 1232 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0038498s, 1232 KB] g=23, 56 evaluated, 55 expanded
[t=0.0038632s, 1232 KB] Solution found!
[t=0.0038703s, 1232 KB] Actual search time: 0.0010225s
drive obj4 obj0 obj13 (1)
load obj2 obj14 obj0 (1)
load obj2 obj12 obj0 (1)
load obj10 obj16 obj5 (1)
fly obj2 obj0 obj5 (1)
load obj2 obj9 obj5 (1)
load obj2 obj15 obj5 (1)
unload obj2 obj14 obj5 (1)
unload obj2 obj12 obj5 (1)
fly obj2 obj5 obj0 (1)
unload obj2 obj9 obj0 (1)
unload obj2 obj15 obj0 (1)
load obj11 obj9 obj0 (1)
load obj11 obj15 obj0 (1)
drive obj11 obj0 obj13 (1)
unload obj11 obj9 obj13 (1)
drive obj11 obj13 obj8 (1)
unload obj11 obj15 obj8 (1)
load obj10 obj14 obj5 (1)
load obj10 obj12 obj5 (1)
drive obj10 obj5 obj7 (1)
unload obj10 obj16 obj7 (1)
unload obj10 obj14 obj7 (1)
unload obj10 obj12 obj7 (1)
[t=0.0038768s, 1232 KB] Plan length: 24 step(s).
[t=0.0038768s, 1232 KB] Plan cost: 24
[t=0.0038768s, 1232 KB] Expanded 56 state(s).
[t=0.0038768s, 1232 KB] Reopened 0 state(s).
[t=0.0038768s, 1232 KB] Evaluated 57 state(s).
[t=0.0038768s, 1232 KB] Evaluations: 114
[t=0.0038768s, 1232 KB] Generated 636 state(s).
[t=0.0038768s, 1232 KB] Dead ends: 0 state(s).
[t=0.0038768s, 1232 KB] Number of registered states: 57
[t=0.0038768s, 1232 KB] Int hash set load factor: 57/64 = 0.890625
[t=0.0038768s, 1232 KB] Int hash set resizes: 6
[t=0.0038768s, 1232 KB] Search time: 0.0010465s
[t=0.0038768s, 1232 KB] Total time: 0.0038768s
Solution found.
search exit code: 0

