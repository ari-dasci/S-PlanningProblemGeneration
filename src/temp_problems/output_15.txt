INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_15.pddl --sas-file temp_problems/sas_plan_15
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.016s CPU, 0.006s wall-clock]
331 relevant atoms
156 auxiliary atoms
487 final queue length
624 total queue pushes
Completing instantiation... [0.000s CPU, 0.009s wall-clock]
Instantiating: [0.016s CPU, 0.022s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.016s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.016s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.000s CPU, 0.008s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.016s CPU, 0.005s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
178 of 178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 64
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 178
Translator axioms: 0
Translator task size: 752
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.047s CPU, 0.058s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_15
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_15 < temp_problems/sas_plan_15
[t=1.75e-05s, 724 KB] reading input...
[t=0.0018406s, 756 KB] done reading input!
[t=0.0054412s, 1108 KB] Initializing landmark count heuristic...
[t=0.0054824s, 1116 KB] Generating landmark graph...
[t=0.005524s, 1116 KB] Building a landmark graph with reasonable orders.
[t=0.0056318s, 1116 KB] Initializing Exploration...
[t=0.0058276s, 1140 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0064524s, 1152 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0064811s, 1152 KB] Landmarks generation time: 0.0008904s
[t=0.0064942s, 1152 KB] Discovered 12 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0065053s, 1152 KB] 10 edges
[t=0.0065152s, 1152 KB] approx. reasonable orders
[t=0.0065437s, 1152 KB] approx. obedient reasonable orders
[t=0.0065599s, 1152 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0065684s, 1152 KB] Landmarks generation time: 0.0010799s
[t=0.0065774s, 1152 KB] Discovered 12 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.006587s, 1152 KB] 10 edges
[t=0.0065941s, 1152 KB] Landmark graph generation time: 0.0011155s
[t=0.0066026s, 1152 KB] Landmark graph contains 12 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0066117s, 1152 KB] Landmark graph contains 10 orderings.
[t=0.0067626s, 1152 KB] Simplifying 178 unary operators... done! [178 unary operators]
[t=0.0068903s, 1152 KB] time to simplify: 0.0001325s
[t=0.0069323s, 1152 KB] Initializing additive heuristic...
[t=0.0069401s, 1152 KB] Initializing FF heuristic...
[t=0.0070456s, 1152 KB] Building successor generator...done!
[t=0.0072066s, 1164 KB] peak memory difference for successor generator creation: 12 KB
[t=0.0072159s, 1164 KB] time for successor generation creation: 0.0001419s
[t=0.0072269s, 1164 KB] Variables: 9
[t=0.0072346s, 1164 KB] FactPairs: 64
[t=0.0072417s, 1164 KB] Bytes per state: 4
[t=0.0075937s, 1184 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.007616s, 1184 KB] 5 initial landmarks, 5 goal landmarks
[t=0.0076509s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0076612s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0076694s, 1184 KB] g=0, 1 evaluated, 0 expanded
[t=0.0077006s, 1184 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0077093s, 1184 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0077296s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0077383s, 1184 KB] g=1, 2 evaluated, 1 expanded
[t=0.0077937s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0078044s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0078122s, 1184 KB] g=2, 4 evaluated, 3 expanded
[t=0.0078464s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.007855s, 1184 KB] g=3, 5 evaluated, 4 expanded
[t=0.0078866s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0078953s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0079032s, 1184 KB] g=4, 6 evaluated, 5 expanded
[t=0.0079362s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.007945s, 1184 KB] g=5, 7 evaluated, 6 expanded
[t=0.0080301s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0080415s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0080505s, 1184 KB] g=6, 10 evaluated, 9 expanded
[t=0.0081093s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0081192s, 1184 KB] g=7, 12 evaluated, 11 expanded
[t=0.008193s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0082034s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0082178s, 1184 KB] g=8, 14 evaluated, 13 expanded
[t=0.0082799s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.008291s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0082986s, 1184 KB] g=9, 16 evaluated, 15 expanded
[t=0.0083393s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0083499s, 1184 KB] g=10, 17 evaluated, 16 expanded
[t=0.0083826s, 1184 KB] Solution found!
[t=0.0083931s, 1184 KB] Actual search time: 0.0007704s
drive obj6 obj4 obj7 (1)
load obj2 obj16 obj0 (1)
drive obj2 obj0 obj3 (1)
unload obj2 obj16 obj3 (1)
fly obj12 obj7 obj0 (1)
load obj12 obj8 obj0 (1)
fly obj12 obj0 obj4 (1)
load obj12 obj9 obj4 (1)
unload obj12 obj8 obj4 (1)
fly obj12 obj4 obj7 (1)
unload obj12 obj9 obj7 (1)
[t=0.0084016s, 1184 KB] Plan length: 11 step(s).
[t=0.0084016s, 1184 KB] Plan cost: 11
[t=0.0084016s, 1184 KB] Expanded 17 state(s).
[t=0.0084016s, 1184 KB] Reopened 0 state(s).
[t=0.0084016s, 1184 KB] Evaluated 18 state(s).
[t=0.0084016s, 1184 KB] Evaluations: 36
[t=0.0084016s, 1184 KB] Generated 257 state(s).
[t=0.0084016s, 1184 KB] Dead ends: 0 state(s).
[t=0.0084016s, 1184 KB] Number of registered states: 18
[t=0.0084016s, 1184 KB] Int hash set load factor: 18/32 = 0.5625
[t=0.0084016s, 1184 KB] Int hash set resizes: 5
[t=0.0084016s, 1184 KB] Search time: 0.0008107s
[t=0.0084016s, 1184 KB] Total time: 0.0084016s
Solution found.
search exit code: 0

