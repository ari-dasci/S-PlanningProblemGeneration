INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_15.pddl --sas-file temp_problems/sas_plan_15
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.018s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
356 relevant atoms
154 auxiliary atoms
510 final queue length
665 total queue pushes
Completing instantiation... [0.000s CPU, 0.010s wall-clock]
Instantiating: [0.000s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
198 of 198 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 67
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 198
Translator axioms: 0
Translator task size: 833
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.000s CPU, 0.038s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_15
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_15 < temp_problems/sas_plan_15
[t=8.3e-06s, 732 KB] reading input...
[t=0.0006965s, 768 KB] done reading input!
[t=0.0018399s, 1116 KB] Initializing landmark count heuristic...
[t=0.0018583s, 1124 KB] Generating landmark graph...
[t=0.0018766s, 1124 KB] Building a landmark graph with reasonable orders.
[t=0.0019355s, 1124 KB] Initializing Exploration...
[t=0.0020341s, 1144 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0024491s, 1168 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0024631s, 1168 KB] Landmarks generation time: 0.0005444s
[t=0.0024705s, 1168 KB] Discovered 21 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0024779s, 1168 KB] 27 edges
[t=0.0024847s, 1168 KB] approx. reasonable orders
[t=0.0025233s, 1168 KB] approx. obedient reasonable orders
[t=0.0025414s, 1168 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0025481s, 1168 KB] Landmarks generation time: 0.0006839s
[t=0.0025547s, 1168 KB] Discovered 21 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0025612s, 1168 KB] 27 edges
[t=0.0025673s, 1168 KB] Landmark graph generation time: 0.0007108s
[t=0.002574s, 1168 KB] Landmark graph contains 21 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.0025809s, 1168 KB] Landmark graph contains 27 orderings.
[t=0.0026443s, 1168 KB] Simplifying 198 unary operators... done! [198 unary operators]
[t=0.0027049s, 1168 KB] time to simplify: 6.25e-05s
[t=0.0027262s, 1168 KB] Initializing additive heuristic...
[t=0.0027327s, 1168 KB] Initializing FF heuristic...
[t=0.0027766s, 1168 KB] Building successor generator...done!
[t=0.0028527s, 1180 KB] peak memory difference for successor generator creation: 12 KB
[t=0.0028592s, 1180 KB] time for successor generation creation: 6.39e-05s
[t=0.0028667s, 1180 KB] Variables: 10
[t=0.002873s, 1180 KB] FactPairs: 67
[t=0.002879s, 1180 KB] Bytes per state: 4
[t=0.0030318s, 1200 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0030414s, 1200 KB] 7 initial landmarks, 6 goal landmarks
[t=0.0030604s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0030671s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0030736s, 1200 KB] g=0, 1 evaluated, 0 expanded
[t=0.003089s, 1200 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0030955s, 1200 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.003108s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0031143s, 1200 KB] g=1, 2 evaluated, 1 expanded
[t=0.0031459s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0031523s, 1200 KB] g=1, 4 evaluated, 3 expanded
[t=0.0031713s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0031777s, 1200 KB] g=2, 5 evaluated, 4 expanded
[t=0.0032173s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0032237s, 1200 KB] g=2, 8 evaluated, 7 expanded
[t=0.0032639s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0032705s, 1200 KB] g=3, 11 evaluated, 10 expanded
[t=0.003332s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0033385s, 1200 KB] g=3, 16 evaluated, 15 expanded
[t=0.0033864s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0033929s, 1200 KB] g=4, 20 evaluated, 19 expanded
[t=0.0034214s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0034297s, 1200 KB] g=4, 22 evaluated, 21 expanded
[t=0.0034573s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0034637s, 1200 KB] g=5, 24 evaluated, 23 expanded
[t=0.0035325s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0035763s, 1200 KB] g=6, 30 evaluated, 29 expanded
[t=0.0036125s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0036192s, 1200 KB] g=6, 32 evaluated, 31 expanded
[t=0.0036804s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.003687s, 1200 KB] g=7, 37 evaluated, 36 expanded
[t=0.003737s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0037436s, 1200 KB] g=8, 41 evaluated, 40 expanded
[t=0.0037698s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0037764s, 1200 KB] g=8, 43 evaluated, 42 expanded
[t=0.0038028s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0038093s, 1200 KB] g=9, 45 evaluated, 44 expanded
[t=0.0038867s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0038933s, 1200 KB] g=10, 52 evaluated, 51 expanded
[t=0.0039114s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0039179s, 1200 KB] g=11, 53 evaluated, 52 expanded
[t=0.0039421s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0039484s, 1200 KB] g=12, 55 evaluated, 54 expanded
[t=0.0039777s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0039842s, 1200 KB] g=12, 57 evaluated, 56 expanded
[t=0.004003s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0040114s, 1200 KB] g=13, 58 evaluated, 57 expanded
[t=0.0040386s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.004045s, 1200 KB] g=13, 60 evaluated, 59 expanded
[t=0.004061s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0040675s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0040741s, 1200 KB] g=14, 61 evaluated, 60 expanded
[t=0.0041014s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0041078s, 1200 KB] g=16, 63 evaluated, 62 expanded
[t=0.0041242s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0041316s, 1200 KB] g=17, 64 evaluated, 63 expanded
[t=0.0041517s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0041581s, 1200 KB] g=17, 65 evaluated, 64 expanded
[t=0.0041739s, 1200 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0041803s, 1200 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0041865s, 1200 KB] g=18, 66 evaluated, 65 expanded
[t=0.0042048s, 1200 KB] Solution found!
[t=0.0042118s, 1200 KB] Actual search time: 0.0011651s
fly obj8 obj0 obj9 (1)
load obj8 obj16 obj9 (1)
load obj8 obj14 obj9 (1)
fly obj8 obj9 obj3 (1)
unload obj8 obj16 obj3 (1)
load obj8 obj15 obj3 (1)
load obj8 obj12 obj3 (1)
fly obj8 obj3 obj9 (1)
unload obj8 obj15 obj9 (1)
load obj8 obj11 obj9 (1)
fly obj8 obj9 obj0 (1)
unload obj8 obj12 obj0 (1)
unload obj8 obj11 obj0 (1)
fly obj8 obj0 obj3 (1)
fly obj8 obj3 obj6 (1)
unload obj8 obj14 obj6 (1)
load obj8 obj13 obj6 (1)
fly obj8 obj6 obj3 (1)
unload obj8 obj13 obj3 (1)
[t=0.0042189s, 1200 KB] Plan length: 19 step(s).
[t=0.0042189s, 1200 KB] Plan cost: 19
[t=0.0042189s, 1200 KB] Expanded 66 state(s).
[t=0.0042189s, 1200 KB] Reopened 0 state(s).
[t=0.0042189s, 1200 KB] Evaluated 67 state(s).
[t=0.0042189s, 1200 KB] Evaluations: 134
[t=0.0042189s, 1200 KB] Generated 1051 state(s).
[t=0.0042189s, 1200 KB] Dead ends: 0 state(s).
[t=0.0042189s, 1200 KB] Number of registered states: 67
[t=0.0042189s, 1200 KB] Int hash set load factor: 67/128 = 0.523438
[t=0.0042189s, 1200 KB] Int hash set resizes: 7
[t=0.0042189s, 1200 KB] Search time: 0.0011877s
[t=0.0042189s, 1200 KB] Total time: 0.0042189s
Solution found.
search exit code: 0

