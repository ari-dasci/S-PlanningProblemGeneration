INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_18.pddl --sas-file temp_problems/sas_plan_18
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
333 relevant atoms
146 auxiliary atoms
479 final queue length
599 total queue pushes
Completing instantiation... [0.000s CPU, 0.016s wall-clock]
Instantiating: [0.000s CPU, 0.016s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
3 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
17 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
11 of 11 variables necessary.
0 of 11 mutex groups necessary.
166 of 166 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 11
Translator derived variables: 0
Translator facts: 70
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 166
Translator axioms: 0
Translator task size: 705
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_18
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_18 < temp_problems/sas_plan_18
[t=1.33e-05s, 728 KB] reading input...
[t=0.000749s, 756 KB] done reading input!
[t=0.0023594s, 1112 KB] Initializing landmark count heuristic...
[t=0.0023839s, 1112 KB] Generating landmark graph...
[t=0.0024083s, 1112 KB] Building a landmark graph with reasonable orders.
[t=0.0024731s, 1120 KB] Initializing Exploration...
[t=0.0025531s, 1136 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0028339s, 1156 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0028462s, 1156 KB] Landmarks generation time: 0.0003936s
[t=0.0028534s, 1156 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0028607s, 1156 KB] 6 edges
[t=0.0028672s, 1156 KB] approx. reasonable orders
[t=0.0028919s, 1156 KB] approx. obedient reasonable orders
[t=0.0029018s, 1156 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0029079s, 1156 KB] Landmarks generation time: 0.0005156s
[t=0.0029141s, 1156 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0029208s, 1156 KB] 6 edges
[t=0.0029267s, 1156 KB] Landmark graph generation time: 0.0005448s
[t=0.002933s, 1156 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0029395s, 1156 KB] Landmark graph contains 6 orderings.
[t=0.0030008s, 1156 KB] Simplifying 166 unary operators... done! [166 unary operators]
[t=0.0030541s, 1156 KB] time to simplify: 5.53e-05s
[t=0.0030732s, 1156 KB] Initializing additive heuristic...
[t=0.0030792s, 1156 KB] Initializing FF heuristic...
[t=0.0031241s, 1156 KB] Building successor generator...done!
[t=0.0031864s, 1156 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0031925s, 1156 KB] time for successor generation creation: 5.05e-05s
[t=0.0032001s, 1156 KB] Variables: 11
[t=0.003206s, 1156 KB] FactPairs: 70
[t=0.0032119s, 1156 KB] Bytes per state: 4
[t=0.0033698s, 1168 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0033804s, 1168 KB] 6 initial landmarks, 6 goal landmarks
[t=0.0033982s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0034047s, 1168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0034109s, 1168 KB] g=0, 1 evaluated, 0 expanded
[t=0.0034309s, 1168 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0034425s, 1168 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0034708s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0034772s, 1168 KB] g=1, 3 evaluated, 2 expanded
[t=0.0035118s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0035181s, 1168 KB] g=2, 5 evaluated, 4 expanded
[t=0.0035738s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0035811s, 1168 KB] g=3, 9 evaluated, 8 expanded
[t=0.0036164s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0036227s, 1168 KB] g=4, 11 evaluated, 10 expanded
[t=0.0036556s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0036618s, 1168 KB] g=5, 13 evaluated, 12 expanded
[t=0.0037149s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0037213s, 1168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0037274s, 1168 KB] g=6, 17 evaluated, 16 expanded
[t=0.0037543s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0037656s, 1168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0037722s, 1168 KB] g=7, 19 evaluated, 18 expanded
[t=0.0037989s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0038073s, 1168 KB] g=8, 21 evaluated, 20 expanded
[t=0.0038341s, 1168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0038479s, 1168 KB] g=8, 23 evaluated, 22 expanded
[t=0.0038659s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0038764s, 1168 KB] g=9, 24 evaluated, 23 expanded
[t=0.0039127s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.003919s, 1168 KB] g=10, 27 evaluated, 26 expanded
[t=0.0039456s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.003952s, 1168 KB] g=11, 29 evaluated, 28 expanded
[t=0.0039672s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0039734s, 1168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.00398s, 1168 KB] g=12, 30 evaluated, 29 expanded
[t=0.0039966s, 1168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0040079s, 1168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0040142s, 1168 KB] g=13, 31 evaluated, 30 expanded
[t=0.004034s, 1168 KB] Solution found!
[t=0.004041s, 1168 KB] Actual search time: 0.0006555s
load obj9 obj7 obj0 (1)
load obj9 obj2 obj0 (1)
load obj9 obj11 obj0 (1)
fly obj9 obj0 obj4 (1)
load obj9 obj8 obj4 (1)
unload obj9 obj7 obj4 (1)
unload obj9 obj2 obj4 (1)
load obj9 obj16 obj4 (1)
unload obj9 obj11 obj4 (1)
load obj9 obj10 obj4 (1)
fly obj9 obj4 obj0 (1)
unload obj9 obj8 obj0 (1)
unload obj9 obj16 obj0 (1)
unload obj9 obj10 obj0 (1)
[t=0.0040475s, 1168 KB] Plan length: 14 step(s).
[t=0.0040475s, 1168 KB] Plan cost: 14
[t=0.0040475s, 1168 KB] Expanded 31 state(s).
[t=0.0040475s, 1168 KB] Reopened 0 state(s).
[t=0.0040475s, 1168 KB] Evaluated 32 state(s).
[t=0.0040475s, 1168 KB] Evaluations: 64
[t=0.0040475s, 1168 KB] Generated 624 state(s).
[t=0.0040475s, 1168 KB] Dead ends: 0 state(s).
[t=0.0040475s, 1168 KB] Number of registered states: 32
[t=0.0040475s, 1168 KB] Int hash set load factor: 32/32 = 1
[t=0.0040475s, 1168 KB] Int hash set resizes: 5
[t=0.0040475s, 1168 KB] Search time: 0.0006783s
[t=0.0040475s, 1168 KB] Total time: 0.0040475s
Solution found.
search exit code: 0

