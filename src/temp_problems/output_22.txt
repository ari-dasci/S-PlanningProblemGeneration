INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_22.pddl --sas-file temp_problems/sas_plan_22
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.003s wall-clock]
355 relevant atoms
164 auxiliary atoms
519 final queue length
676 total queue pushes
Completing instantiation... [0.000s CPU, 0.004s wall-clock]
Instantiating: [0.000s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.016s CPU, 0.005s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
198 of 198 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 65
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 198
Translator axioms: 0
Translator task size: 823
warning: could not determine peak memory
Writing output... [0.016s CPU, 0.014s wall-clock]
Done! [0.031s CPU, 0.037s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_22
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_22 < temp_problems/sas_plan_22
[t=1.13e-05s, 720 KB] reading input...
[t=0.0007566s, 756 KB] done reading input!
[t=0.0023605s, 1100 KB] Initializing landmark count heuristic...
[t=0.0023826s, 1108 KB] Generating landmark graph...
[t=0.0024078s, 1108 KB] Building a landmark graph with reasonable orders.
[t=0.0024806s, 1108 KB] Initializing Exploration...
[t=0.002578s, 1132 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0029886s, 1160 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0030042s, 1160 KB] Landmarks generation time: 0.0005476s
[t=0.0030123s, 1160 KB] Discovered 18 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0030202s, 1160 KB] 20 edges
[t=0.0030269s, 1160 KB] approx. reasonable orders
[t=0.003052s, 1160 KB] approx. obedient reasonable orders
[t=0.003065s, 1160 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0030746s, 1160 KB] Landmarks generation time: 0.0006855s
[t=0.0030839s, 1160 KB] Discovered 18 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0030907s, 1160 KB] 20 edges
[t=0.0030969s, 1160 KB] Landmark graph generation time: 0.0007163s
[t=0.0031038s, 1160 KB] Landmark graph contains 18 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.003111s, 1160 KB] Landmark graph contains 20 orderings.
[t=0.0031776s, 1160 KB] Simplifying 198 unary operators... done! [198 unary operators]
[t=0.003244s, 1172 KB] time to simplify: 6.86e-05s
[t=0.0032692s, 1172 KB] Initializing additive heuristic...
[t=0.0032759s, 1172 KB] Initializing FF heuristic...
[t=0.0033209s, 1172 KB] Building successor generator...done!
[t=0.0033894s, 1172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0033979s, 1172 KB] time for successor generation creation: 5.54e-05s
[t=0.003406s, 1172 KB] Variables: 9
[t=0.0034127s, 1172 KB] FactPairs: 65
[t=0.0034198s, 1172 KB] Bytes per state: 4
[t=0.0035787s, 1184 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0035959s, 1184 KB] 5 initial landmarks, 5 goal landmarks
[t=0.0036175s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0036263s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0036329s, 1184 KB] g=0, 1 evaluated, 0 expanded
[t=0.0036491s, 1184 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0036557s, 1184 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0036677s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0036743s, 1184 KB] g=1, 2 evaluated, 1 expanded
[t=0.0037027s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0037091s, 1184 KB] g=2, 4 evaluated, 3 expanded
[t=0.0037722s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0037787s, 1184 KB] g=1, 10 evaluated, 9 expanded
[t=0.0038214s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0038298s, 1184 KB] g=3, 13 evaluated, 12 expanded
[t=0.0039056s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0039124s, 1184 KB] g=2, 20 evaluated, 19 expanded
[t=0.0039875s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0039943s, 1184 KB] g=3, 27 evaluated, 26 expanded
[t=0.0040167s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0040245s, 1184 KB] g=4, 28 evaluated, 27 expanded
[t=0.0040789s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0040875s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0040947s, 1184 KB] g=5, 32 evaluated, 31 expanded
[t=0.0041542s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0041634s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0041746s, 1184 KB] g=6, 37 evaluated, 36 expanded
[t=0.0041931s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0041998s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0042061s, 1184 KB] g=7, 38 evaluated, 37 expanded
[t=0.0042523s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0042591s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0042655s, 1184 KB] g=8, 42 evaluated, 41 expanded
[t=0.0042839s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0042918s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0042983s, 1184 KB] g=9, 43 evaluated, 42 expanded
[t=0.0043325s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0043389s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0043452s, 1184 KB] g=10, 46 evaluated, 45 expanded
[t=0.0043605s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.004367s, 1184 KB] g=11, 47 evaluated, 46 expanded
[t=0.0043933s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0044011s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0044077s, 1184 KB] g=12, 49 evaluated, 48 expanded
[t=0.004433s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0044396s, 1184 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.004446s, 1184 KB] g=14, 51 evaluated, 50 expanded
[t=0.0044597s, 1184 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.004466s, 1184 KB] g=15, 52 evaluated, 51 expanded
[t=0.0044826s, 1184 KB] Solution found!
[t=0.0044918s, 1184 KB] Actual search time: 0.0008902s
load obj14 obj6 obj2 (1)
load obj14 obj13 obj2 (1)
load obj14 obj11 obj2 (1)
fly obj14 obj2 obj0 (1)
load obj14 obj8 obj0 (1)
unload obj14 obj11 obj0 (1)
fly obj14 obj0 obj12 (1)
unload obj14 obj6 obj12 (1)
fly obj14 obj12 obj16 (1)
unload obj14 obj13 obj16 (1)
fly obj14 obj16 obj2 (1)
unload obj14 obj8 obj2 (1)
fly obj14 obj2 obj4 (1)
load obj14 obj5 obj4 (1)
fly obj14 obj4 obj2 (1)
unload obj14 obj5 obj2 (1)
[t=0.0045028s, 1184 KB] Plan length: 16 step(s).
[t=0.0045028s, 1184 KB] Plan cost: 16
[t=0.0045028s, 1184 KB] Expanded 52 state(s).
[t=0.0045028s, 1184 KB] Reopened 0 state(s).
[t=0.0045028s, 1184 KB] Evaluated 53 state(s).
[t=0.0045028s, 1184 KB] Evaluations: 106
[t=0.0045028s, 1184 KB] Generated 749 state(s).
[t=0.0045028s, 1184 KB] Dead ends: 0 state(s).
[t=0.0045028s, 1184 KB] Number of registered states: 53
[t=0.0045028s, 1184 KB] Int hash set load factor: 53/64 = 0.828125
[t=0.0045028s, 1184 KB] Int hash set resizes: 6
[t=0.0045028s, 1184 KB] Search time: 0.0009253s
[t=0.0045028s, 1184 KB] Total time: 0.0045028s
Solution found.
search exit code: 0

