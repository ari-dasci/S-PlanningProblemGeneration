INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_24.pddl --sas-file temp_problems/sas_plan_24
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
311 relevant atoms
174 auxiliary atoms
485 final queue length
617 total queue pushes
Completing instantiation... [0.016s CPU, 0.000s wall-clock]
Instantiating: [0.016s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.016s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
158 of 158 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 56
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 158
Translator axioms: 0
Translator task size: 663
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.016s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_24
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_24 < temp_problems/sas_plan_24
[t=1.84e-05s, 800 KB] reading input...
[t=0.0005765s, 824 KB] done reading input!
[t=0.0017631s, 1164 KB] Initializing landmark count heuristic...
[t=0.0017794s, 1164 KB] Generating landmark graph...
[t=0.0017969s, 1164 KB] Building a landmark graph with reasonable orders.
[t=0.001863s, 1164 KB] Initializing Exploration...
[t=0.0019402s, 1192 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0023517s, 1220 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0023647s, 1220 KB] Landmarks generation time: 0.0005149s
[t=0.0023718s, 1220 KB] Discovered 19 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.0023789s, 1220 KB] 42 edges
[t=0.0023852s, 1220 KB] approx. reasonable orders
[t=0.0024092s, 1220 KB] approx. obedient reasonable orders
[t=0.0024289s, 1220 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0024356s, 1220 KB] Landmarks generation time: 0.0006506s
[t=0.0024421s, 1220 KB] Discovered 19 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.0024487s, 1220 KB] 42 edges
[t=0.0024546s, 1220 KB] Landmark graph generation time: 0.000677s
[t=0.0024612s, 1220 KB] Landmark graph contains 19 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.0024678s, 1220 KB] Landmark graph contains 42 orderings.
[t=0.0025262s, 1220 KB] Simplifying 158 unary operators... done! [158 unary operators]
[t=0.0025794s, 1232 KB] time to simplify: 5.5e-05s
[t=0.0025986s, 1232 KB] Initializing additive heuristic...
[t=0.0026048s, 1232 KB] Initializing FF heuristic...
[t=0.0026543s, 1232 KB] Building successor generator...done!
[t=0.0027157s, 1232 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0027221s, 1232 KB] time for successor generation creation: 4.9e-05s
[t=0.0027306s, 1232 KB] Variables: 10
[t=0.0027369s, 1232 KB] FactPairs: 56
[t=0.002743s, 1232 KB] Bytes per state: 4
[t=0.00287s, 1252 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0028806s, 1252 KB] 4 initial landmarks, 3 goal landmarks
[t=0.0029031s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0029098s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0029159s, 1252 KB] g=0, 1 evaluated, 0 expanded
[t=0.0029347s, 1252 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0029409s, 1252 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0029669s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0029731s, 1252 KB] g=1, 3 evaluated, 2 expanded
[t=0.0029927s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0029991s, 1252 KB] g=1, 4 evaluated, 3 expanded
[t=0.0030291s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0030355s, 1252 KB] g=2, 6 evaluated, 5 expanded
[t=0.0030538s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.00306s, 1252 KB] g=2, 7 evaluated, 6 expanded
[t=0.0030772s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0030834s, 1252 KB] g=3, 8 evaluated, 7 expanded
[t=0.0031553s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0031618s, 1252 KB] g=4, 14 evaluated, 13 expanded
[t=0.0031883s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0031947s, 1252 KB] g=4, 16 evaluated, 15 expanded
[t=0.0032311s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0032375s, 1252 KB] g=5, 19 evaluated, 18 expanded
[t=0.0032544s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0032607s, 1252 KB] g=5, 20 evaluated, 19 expanded
[t=0.0033064s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0033456s, 1252 KB] g=6, 24 evaluated, 23 expanded
[t=0.0033996s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0034064s, 1252 KB] g=6, 28 evaluated, 27 expanded
[t=0.0034227s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.003429s, 1252 KB] g=7, 29 evaluated, 28 expanded
[t=0.0034856s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.003492s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0034981s, 1252 KB] g=8, 34 evaluated, 33 expanded
[t=0.0035629s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0035694s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0035753s, 1252 KB] g=10, 40 evaluated, 39 expanded
[t=0.0036119s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0036182s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0036242s, 1252 KB] g=11, 43 evaluated, 42 expanded
[t=0.0036581s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0036645s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0036704s, 1252 KB] g=12, 46 evaluated, 45 expanded
[t=0.0036958s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.003702s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0037081s, 1252 KB] g=13, 48 evaluated, 47 expanded
[t=0.0037322s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0037386s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0037446s, 1252 KB] g=14, 50 evaluated, 49 expanded
[t=0.0037722s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0037784s, 1252 KB] g=15, 52 evaluated, 51 expanded
[t=0.0037972s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0038037s, 1252 KB] g=16, 53 evaluated, 52 expanded
[t=0.0038275s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0038337s, 1252 KB] g=17, 55 evaluated, 54 expanded
[t=0.0038646s, 1252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0038709s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0038768s, 1252 KB] g=18, 58 evaluated, 57 expanded
[t=0.003892s, 1252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0038981s, 1252 KB] g=19, 59 evaluated, 58 expanded
[t=0.0039118s, 1252 KB] Solution found!
[t=0.0039186s, 1252 KB] Actual search time: 0.0010326s
load obj7 obj6 obj0 (1)
load obj7 obj4 obj0 (1)
fly obj7 obj0 obj8 (1)
unload obj7 obj6 obj8 (1)
unload obj7 obj4 obj8 (1)
drive obj2 obj0 obj16 (1)
load obj13 obj6 obj8 (1)
load obj13 obj4 obj8 (1)
drive obj13 obj8 obj14 (1)
unload obj13 obj6 obj14 (1)
unload obj13 obj4 obj14 (1)
load obj13 obj15 obj14 (1)
drive obj13 obj14 obj8 (1)
unload obj13 obj15 obj8 (1)
load obj7 obj15 obj8 (1)
fly obj7 obj8 obj11 (1)
unload obj7 obj15 obj11 (1)
load obj12 obj15 obj11 (1)
drive obj12 obj11 obj16 (1)
unload obj12 obj15 obj16 (1)
[t=0.0039248s, 1252 KB] Plan length: 20 step(s).
[t=0.0039248s, 1252 KB] Plan cost: 20
[t=0.0039248s, 1252 KB] Expanded 59 state(s).
[t=0.0039248s, 1252 KB] Reopened 0 state(s).
[t=0.0039248s, 1252 KB] Evaluated 60 state(s).
[t=0.0039248s, 1252 KB] Evaluations: 120
[t=0.0039248s, 1252 KB] Generated 942 state(s).
[t=0.0039248s, 1252 KB] Dead ends: 0 state(s).
[t=0.0039248s, 1252 KB] Number of registered states: 60
[t=0.0039248s, 1252 KB] Int hash set load factor: 60/64 = 0.9375
[t=0.0039248s, 1252 KB] Int hash set resizes: 6
[t=0.0039248s, 1252 KB] Search time: 0.0010556s
[t=0.0039248s, 1252 KB] Total time: 0.0039248s
Solution found.
search exit code: 0

