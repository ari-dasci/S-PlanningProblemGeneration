INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_4.pddl --sas-file temp_problems/sas_plan_4
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.016s CPU, 0.016s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.004s wall-clock]
261 relevant atoms
163 auxiliary atoms
424 final queue length
528 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.004s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
122 of 122 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 45
Translator goal facts: 2
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 122
Translator axioms: 0
Translator task size: 497
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.012s wall-clock]
Done! [0.016s CPU, 0.032s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_4
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_4 < temp_problems/sas_plan_4
[t=1.69e-05s, 716 KB] reading input...
[t=0.0006673s, 736 KB] done reading input!
[t=0.002379s, 1080 KB] Initializing landmark count heuristic...
[t=0.0024056s, 1088 KB] Generating landmark graph...
[t=0.0024321s, 1088 KB] Building a landmark graph with reasonable orders.
[t=0.0024999s, 1088 KB] Initializing Exploration...
[t=0.0025961s, 1104 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0029123s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0029417s, 1128 KB] Landmarks generation time: 0.000458s
[t=0.0029535s, 1128 KB] Discovered 9 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0029641s, 1128 KB] 13 edges
[t=0.0029743s, 1128 KB] approx. reasonable orders
[t=0.0029887s, 1128 KB] approx. obedient reasonable orders
[t=0.0030017s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.003011s, 1128 KB] Landmarks generation time: 0.0005969s
[t=0.003024s, 1128 KB] Discovered 9 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.003034s, 1128 KB] 13 edges
[t=0.0030438s, 1128 KB] Landmark graph generation time: 0.0006409s
[t=0.003054s, 1128 KB] Landmark graph contains 9 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0030663s, 1128 KB] Landmark graph contains 13 orderings.
[t=0.0031551s, 1128 KB] Simplifying 122 unary operators... done! [122 unary operators]
[t=0.0032273s, 1128 KB] time to simplify: 7.58e-05s
[t=0.0032542s, 1128 KB] Initializing additive heuristic...
[t=0.0032636s, 1128 KB] Initializing FF heuristic...
[t=0.0033366s, 1128 KB] Building successor generator...done!
[t=0.003424s, 1140 KB] peak memory difference for successor generator creation: 12 KB
[t=0.0034354s, 1140 KB] time for successor generation creation: 6.34e-05s
[t=0.0034478s, 1140 KB] Variables: 8
[t=0.0034573s, 1140 KB] FactPairs: 45
[t=0.0034666s, 1140 KB] Bytes per state: 4
[t=0.0037152s, 1152 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0037358s, 1152 KB] 2 initial landmarks, 2 goal landmarks
[t=0.0037641s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0037721s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0037789s, 1152 KB] g=0, 1 evaluated, 0 expanded
[t=0.0037976s, 1152 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0038045s, 1152 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0038275s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0038344s, 1152 KB] g=1, 3 evaluated, 2 expanded
[t=0.003864s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0038711s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0038781s, 1152 KB] g=2, 5 evaluated, 4 expanded
[t=0.0039059s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.003919s, 1152 KB] g=3, 7 evaluated, 6 expanded
[t=0.0039453s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0039527s, 1152 KB] g=3, 9 evaluated, 8 expanded
[t=0.0039866s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0039957s, 1152 KB] g=4, 12 evaluated, 11 expanded
[t=0.0040129s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0040204s, 1152 KB] g=4, 13 evaluated, 12 expanded
[t=0.0040627s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0040699s, 1152 KB] g=5, 17 evaluated, 16 expanded
[t=0.0040864s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0040935s, 1152 KB] g=6, 18 evaluated, 17 expanded
[t=0.0041225s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0041297s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0041364s, 1152 KB] g=7, 20 evaluated, 19 expanded
[t=0.0042049s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0042158s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0042284s, 1152 KB] g=8, 22 evaluated, 21 expanded
[t=0.0042558s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0042668s, 1152 KB] g=9, 23 evaluated, 22 expanded
[t=0.0042831s, 1152 KB] Solution found!
[t=0.0042907s, 1152 KB] Actual search time: 0.0005443s
fly obj6 obj4 obj0 (1)
load obj6 obj2 obj0 (1)
load obj15 obj11 obj9 (1)
drive obj15 obj9 obj4 (1)
unload obj15 obj11 obj4 (1)
fly obj6 obj0 obj4 (1)
unload obj6 obj2 obj4 (1)
load obj6 obj11 obj4 (1)
fly obj6 obj4 obj0 (1)
unload obj6 obj11 obj0 (1)
[t=0.0042976s, 1152 KB] Plan length: 10 step(s).
[t=0.0042976s, 1152 KB] Plan cost: 10
[t=0.0042976s, 1152 KB] Expanded 23 state(s).
[t=0.0042976s, 1152 KB] Reopened 0 state(s).
[t=0.0042976s, 1152 KB] Evaluated 24 state(s).
[t=0.0042976s, 1152 KB] Evaluations: 48
[t=0.0042976s, 1152 KB] Generated 359 state(s).
[t=0.0042976s, 1152 KB] Dead ends: 0 state(s).
[t=0.0042976s, 1152 KB] Number of registered states: 24
[t=0.0042976s, 1152 KB] Int hash set load factor: 24/32 = 0.75
[t=0.0042976s, 1152 KB] Int hash set resizes: 5
[t=0.0042976s, 1152 KB] Search time: 0.0005836s
[t=0.0042976s, 1152 KB] Total time: 0.0042976s
Solution found.
search exit code: 0

