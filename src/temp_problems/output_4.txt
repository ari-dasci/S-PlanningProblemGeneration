INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_4.pddl --sas-file temp_problems/sas_plan_4
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.003s wall-clock]
338 relevant atoms
181 auxiliary atoms
519 final queue length
677 total queue pushes
Completing instantiation... [0.000s CPU, 0.004s wall-clock]
Instantiating: [0.000s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.004s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
186 of 186 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 56
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 186
Translator axioms: 0
Translator task size: 745
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.000s CPU, 0.025s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_4
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_4 < temp_problems/sas_plan_4
[t=8.4e-06s, 720 KB] reading input...
[t=0.0006879s, 752 KB] done reading input!
[t=0.0017669s, 1092 KB] Initializing landmark count heuristic...
[t=0.0017842s, 1092 KB] Generating landmark graph...
[t=0.0018066s, 1092 KB] Building a landmark graph with reasonable orders.
[t=0.0018587s, 1092 KB] Initializing Exploration...
[t=0.0019381s, 1112 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0022s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0022131s, 1128 KB] Landmarks generation time: 0.0003679s
[t=0.002221s, 1128 KB] Discovered 10 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.002228s, 1128 KB] 8 edges
[t=0.0022348s, 1128 KB] approx. reasonable orders
[t=0.0022458s, 1128 KB] approx. obedient reasonable orders
[t=0.0022549s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0022612s, 1128 KB] Landmarks generation time: 0.0004708s
[t=0.0022677s, 1128 KB] Discovered 10 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0022743s, 1128 KB] 8 edges
[t=0.0022804s, 1128 KB] Landmark graph generation time: 0.000498s
[t=0.0022871s, 1128 KB] Landmark graph contains 10 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0022938s, 1128 KB] Landmark graph contains 8 orderings.
[t=0.002355s, 1128 KB] Simplifying 186 unary operators... done! [186 unary operators]
[t=0.0024154s, 1140 KB] time to simplify: 6.23e-05s
[t=0.0024358s, 1140 KB] Initializing additive heuristic...
[t=0.0024419s, 1140 KB] Initializing FF heuristic...
[t=0.0024852s, 1140 KB] Building successor generator...done!
[t=0.0025481s, 1144 KB] peak memory difference for successor generator creation: 4 KB
[t=0.0025548s, 1144 KB] time for successor generation creation: 5.07e-05s
[t=0.0025624s, 1144 KB] Variables: 8
[t=0.002569s, 1144 KB] FactPairs: 56
[t=0.0025753s, 1144 KB] Bytes per state: 4
[t=0.0027414s, 1164 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0027511s, 1164 KB] 3 initial landmarks, 3 goal landmarks
[t=0.0027692s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0027798s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0027864s, 1164 KB] g=0, 1 evaluated, 0 expanded
[t=0.0028032s, 1164 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0028097s, 1164 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0028323s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0028388s, 1164 KB] g=1, 3 evaluated, 2 expanded
[t=0.0028685s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.002875s, 1164 KB] g=1, 5 evaluated, 4 expanded
[t=0.0029039s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0029103s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.002917s, 1164 KB] g=2, 7 evaluated, 6 expanded
[t=0.0029349s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0029413s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0029476s, 1164 KB] g=3, 8 evaluated, 7 expanded
[t=0.0029862s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0029926s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.002999s, 1164 KB] g=4, 11 evaluated, 10 expanded
[t=0.0030359s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0030422s, 1164 KB] g=6, 14 evaluated, 13 expanded
[t=0.0030588s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0030666s, 1164 KB] g=7, 15 evaluated, 14 expanded
[t=0.0031071s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0031161s, 1164 KB] g=8, 17 evaluated, 16 expanded
[t=0.0031746s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0036842s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0037013s, 1164 KB] g=9, 21 evaluated, 20 expanded
[t=0.003731s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0037385s, 1164 KB] g=10, 22 evaluated, 21 expanded
[t=0.0037569s, 1164 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0037638s, 1164 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0037706s, 1164 KB] g=11, 23 evaluated, 22 expanded
[t=0.003791s, 1164 KB] Solution found!
[t=0.0037985s, 1164 KB] Actual search time: 0.001042s
load obj2 obj4 obj0 (1)
fly obj2 obj0 obj3 (1)
unload obj2 obj4 obj3 (1)
load obj13 obj8 obj5 (1)
drive obj14 obj5 obj7 (1)
load obj14 obj9 obj7 (1)
drive obj14 obj7 obj5 (1)
unload obj14 obj9 obj5 (1)
load obj13 obj9 obj5 (1)
fly obj13 obj5 obj0 (1)
unload obj13 obj9 obj0 (1)
unload obj13 obj8 obj0 (1)
[t=0.0038049s, 1164 KB] Plan length: 12 step(s).
[t=0.0038049s, 1164 KB] Plan cost: 12
[t=0.0038049s, 1164 KB] Expanded 23 state(s).
[t=0.0038049s, 1164 KB] Reopened 0 state(s).
[t=0.0038049s, 1164 KB] Evaluated 24 state(s).
[t=0.0038049s, 1164 KB] Evaluations: 48
[t=0.0038049s, 1164 KB] Generated 413 state(s).
[t=0.0038049s, 1164 KB] Dead ends: 0 state(s).
[t=0.0038049s, 1164 KB] Number of registered states: 24
[t=0.0038049s, 1164 KB] Int hash set load factor: 24/32 = 0.75
[t=0.0038049s, 1164 KB] Int hash set resizes: 5
[t=0.0038049s, 1164 KB] Search time: 0.0010642s
[t=0.0038049s, 1164 KB] Total time: 0.0038049s
Solution found.
search exit code: 0

