INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_21.pddl --sas-file temp_problems/sas_plan_21
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
229 relevant atoms
123 auxiliary atoms
352 final queue length
445 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
6 of 6 variables necessary.
0 of 6 mutex groups necessary.
114 of 114 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 6
Translator derived variables: 0
Translator facts: 39
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 114
Translator axioms: 0
Translator task size: 462
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.000s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_21
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_21 < temp_problems/sas_plan_21
[t=1.34e-05s, 732 KB] reading input...
[t=0.0006096s, 752 KB] done reading input!
[t=0.0018949s, 1096 KB] Initializing landmark count heuristic...
[t=0.001919s, 1104 KB] Generating landmark graph...
[t=0.0019343s, 1104 KB] Building a landmark graph with reasonable orders.
[t=0.001991s, 1104 KB] Initializing Exploration...
[t=0.0020708s, 1116 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0022938s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0023044s, 1128 KB] Landmarks generation time: 0.0003252s
[t=0.002316s, 1128 KB] Discovered 12 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023232s, 1128 KB] 15 edges
[t=0.0023302s, 1128 KB] approx. reasonable orders
[t=0.0023425s, 1128 KB] approx. obedient reasonable orders
[t=0.0023521s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0023587s, 1128 KB] Landmarks generation time: 0.000434s
[t=0.0023656s, 1128 KB] Discovered 12 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023725s, 1128 KB] 15 edges
[t=0.0023787s, 1128 KB] Landmark graph generation time: 0.0004615s
[t=0.0023914s, 1128 KB] Landmark graph contains 12 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023987s, 1128 KB] Landmark graph contains 15 orderings.
[t=0.0024509s, 1128 KB] Simplifying 114 unary operators... done! [114 unary operators]
[t=0.0024927s, 1128 KB] time to simplify: 4.36e-05s
[t=0.0025088s, 1128 KB] Initializing additive heuristic...
[t=0.0025155s, 1128 KB] Initializing FF heuristic...
[t=0.0025656s, 1140 KB] Building successor generator...done!
[t=0.0026092s, 1140 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0026158s, 1140 KB] time for successor generation creation: 3.12e-05s
[t=0.0026235s, 1140 KB] Variables: 6
[t=0.0026323s, 1140 KB] FactPairs: 39
[t=0.0026388s, 1140 KB] Bytes per state: 4
[t=0.0028235s, 1160 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0028331s, 1160 KB] 3 initial landmarks, 3 goal landmarks
[t=0.0028525s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0028593s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0028654s, 1160 KB] g=0, 1 evaluated, 0 expanded
[t=0.002879s, 1160 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0028855s, 1160 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0028968s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0029031s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0029093s, 1160 KB] g=1, 2 evaluated, 1 expanded
[t=0.0029493s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0029559s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0029627s, 1160 KB] g=2, 6 evaluated, 5 expanded
[t=0.0029776s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0029841s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0029902s, 1160 KB] g=3, 7 evaluated, 6 expanded
[t=0.003032s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0030384s, 1160 KB] g=5, 11 evaluated, 10 expanded
[t=0.0030534s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0030599s, 1160 KB] g=5, 12 evaluated, 11 expanded
[t=0.0030757s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0030821s, 1160 KB] g=6, 13 evaluated, 12 expanded
[t=0.0030962s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0031024s, 1160 KB] g=6, 14 evaluated, 13 expanded
[t=0.0031486s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.003155s, 1160 KB] g=8, 19 evaluated, 18 expanded
[t=0.0031773s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0031847s, 1160 KB] g=9, 20 evaluated, 19 expanded
[t=0.003207s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0032136s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0032197s, 1160 KB] g=11, 22 evaluated, 21 expanded
[t=0.0032335s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0032399s, 1160 KB] g=12, 23 evaluated, 22 expanded
[t=0.0032533s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0032595s, 1160 KB] g=12, 24 evaluated, 23 expanded
[t=0.0032888s, 1160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0032953s, 1160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0033015s, 1160 KB] g=13, 25 evaluated, 24 expanded
[t=0.0033146s, 1160 KB] Solution found!
[t=0.0033214s, 1160 KB] Actual search time: 0.0004833s
fly obj7 obj6 obj0 (1)
load obj7 obj13 obj0 (1)
fly obj7 obj0 obj5 (1)
fly obj7 obj5 obj6 (1)
load obj7 obj12 obj6 (1)
fly obj7 obj6 obj5 (1)
fly obj7 obj5 obj8 (1)
unload obj7 obj12 obj8 (1)
fly obj7 obj8 obj5 (1)
fly obj7 obj5 obj9 (1)
unload obj7 obj13 obj9 (1)
load obj7 obj10 obj9 (1)
fly obj7 obj9 obj5 (1)
unload obj7 obj10 obj5 (1)
[t=0.0033278s, 1160 KB] Plan length: 14 step(s).
[t=0.0033278s, 1160 KB] Plan cost: 14
[t=0.0033278s, 1160 KB] Expanded 25 state(s).
[t=0.0033278s, 1160 KB] Reopened 0 state(s).
[t=0.0033278s, 1160 KB] Evaluated 26 state(s).
[t=0.0033278s, 1160 KB] Evaluations: 52
[t=0.0033278s, 1160 KB] Generated 264 state(s).
[t=0.0033278s, 1160 KB] Dead ends: 0 state(s).
[t=0.0033278s, 1160 KB] Number of registered states: 26
[t=0.0033278s, 1160 KB] Int hash set load factor: 26/32 = 0.8125
[t=0.0033278s, 1160 KB] Int hash set resizes: 5
[t=0.0033278s, 1160 KB] Search time: 0.0005048s
[t=0.0033278s, 1160 KB] Total time: 0.0033278s
Solution found.
search exit code: 0

