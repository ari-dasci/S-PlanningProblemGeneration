INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_16.pddl --sas-file temp_problems/sas_plan_16
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
314 relevant atoms
124 auxiliary atoms
438 final queue length
530 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.016s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
12 of 12 variables necessary.
0 of 12 mutex groups necessary.
148 of 148 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 12
Translator derived variables: 0
Translator facts: 75
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 148
Translator axioms: 0
Translator task size: 641
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_16
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_16 < temp_problems/sas_plan_16
[t=2.23e-05s, 732 KB] reading input...
[t=0.0005975s, 760 KB] done reading input!
[t=0.0020853s, 1104 KB] Initializing landmark count heuristic...
[t=0.0021102s, 1112 KB] Generating landmark graph...
[t=0.0021286s, 1112 KB] Building a landmark graph with reasonable orders.
[t=0.0021872s, 1112 KB] Initializing Exploration...
[t=0.0022625s, 1136 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0027134s, 1168 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.002727s, 1168 KB] Landmarks generation time: 0.0005538s
[t=0.0027429s, 1168 KB] Discovered 32 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0027506s, 1168 KB] 47 edges
[t=0.0027575s, 1168 KB] approx. reasonable orders
[t=0.002851s, 1168 KB] approx. obedient reasonable orders
[t=0.0028731s, 1168 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0028812s, 1168 KB] Landmarks generation time: 0.0007648s
[t=0.0028879s, 1168 KB] Discovered 32 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0028954s, 1168 KB] 47 edges
[t=0.0029016s, 1168 KB] Landmark graph generation time: 0.0007932s
[t=0.0029083s, 1168 KB] Landmark graph contains 32 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0029152s, 1168 KB] Landmark graph contains 47 orderings.
[t=0.0029784s, 1168 KB] Simplifying 148 unary operators... done! [148 unary operators]
[t=0.0030311s, 1180 KB] time to simplify: 5.46e-05s
[t=0.00305s, 1180 KB] Initializing additive heuristic...
[t=0.0030568s, 1180 KB] Initializing FF heuristic...
[t=0.0031056s, 1180 KB] Building successor generator...done!
[t=0.0031648s, 1180 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0031712s, 1180 KB] time for successor generation creation: 4.69e-05s
[t=0.0031796s, 1180 KB] Variables: 12
[t=0.0031902s, 1180 KB] FactPairs: 75
[t=0.0031963s, 1180 KB] Bytes per state: 8
[t=0.0033587s, 1192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0033735s, 1192 KB] 11 initial landmarks, 10 goal landmarks
[t=0.0033944s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0034014s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0034089s, 1192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0034286s, 1192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0034352s, 1192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0034605s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0034672s, 1192 KB] g=1, 3 evaluated, 2 expanded
[t=0.0034898s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0034963s, 1192 KB] g=1, 4 evaluated, 3 expanded
[t=0.0035161s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0035229s, 1192 KB] g=2, 5 evaluated, 4 expanded
[t=0.0035706s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0035771s, 1192 KB] g=2, 8 evaluated, 7 expanded
[t=0.0035969s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0036033s, 1192 KB] g=3, 9 evaluated, 8 expanded
[t=0.0036499s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0036564s, 1192 KB] g=3, 12 evaluated, 11 expanded
[t=0.0036747s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.003681s, 1192 KB] g=4, 13 evaluated, 12 expanded
[t=0.0037254s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0037318s, 1192 KB] g=4, 16 evaluated, 15 expanded
[t=0.0037504s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0037569s, 1192 KB] g=5, 17 evaluated, 16 expanded
[t=0.0038001s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0038116s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0038186s, 1192 KB] g=6, 20 evaluated, 19 expanded
[t=0.0038486s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.003855s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0038611s, 1192 KB] g=7, 22 evaluated, 21 expanded
[t=0.0038927s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0038991s, 1192 KB] g=9, 24 evaluated, 23 expanded
[t=0.0039172s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0039235s, 1192 KB] g=10, 25 evaluated, 24 expanded
[t=0.0039397s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0039458s, 1192 KB] g=10, 26 evaluated, 25 expanded
[t=0.003964s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0039702s, 1192 KB] g=11, 27 evaluated, 26 expanded
[t=0.0039866s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0039927s, 1192 KB] g=11, 28 evaluated, 27 expanded
[t=0.0040106s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0040168s, 1192 KB] g=12, 29 evaluated, 28 expanded
[t=0.0040544s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0040607s, 1192 KB] g=12, 32 evaluated, 31 expanded
[t=0.0040806s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0040869s, 1192 KB] g=13, 33 evaluated, 32 expanded
[t=0.0041027s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0041088s, 1192 KB] g=13, 34 evaluated, 33 expanded
[t=0.0041263s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0041325s, 1192 KB] g=14, 35 evaluated, 34 expanded
[t=0.0041706s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.004177s, 1192 KB] g=14, 38 evaluated, 37 expanded
[t=0.0041943s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0042006s, 1192 KB] g=15, 39 evaluated, 38 expanded
[t=0.0042383s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0042445s, 1192 KB] g=15, 42 evaluated, 41 expanded
[t=0.004262s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0042682s, 1192 KB] g=16, 43 evaluated, 42 expanded
[t=0.004284s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00429s, 1192 KB] g=16, 44 evaluated, 43 expanded
[t=0.0043075s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0043136s, 1192 KB] g=17, 45 evaluated, 44 expanded
[t=0.0043504s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0043566s, 1192 KB] g=17, 48 evaluated, 47 expanded
[t=0.0043739s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0043801s, 1192 KB] g=18, 49 evaluated, 48 expanded
[t=0.0044154s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0044217s, 1192 KB] g=18, 52 evaluated, 51 expanded
[t=0.0044386s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.004445s, 1192 KB] g=19, 53 evaluated, 52 expanded
[t=0.0044617s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0044681s, 1192 KB] g=19, 54 evaluated, 53 expanded
[t=0.0044945s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0045007s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0045067s, 1192 KB] g=20, 56 evaluated, 55 expanded
[t=0.0045229s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0045291s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0045351s, 1192 KB] g=21, 57 evaluated, 56 expanded
[t=0.0045512s, 1192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0045573s, 1192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0045633s, 1192 KB] g=22, 58 evaluated, 57 expanded
[t=0.0045794s, 1192 KB] Solution found!
[t=0.0045863s, 1192 KB] Actual search time: 0.0012071s
fly obj5 obj0 obj2 (1)
load obj5 obj9 obj2 (1)
load obj5 obj7 obj2 (1)
load obj5 obj17 obj2 (1)
load obj5 obj15 obj2 (1)
load obj5 obj14 obj2 (1)
load obj5 obj11 obj2 (1)
fly obj5 obj2 obj0 (1)
unload obj5 obj9 obj0 (1)
load obj5 obj8 obj0 (1)
unload obj5 obj7 obj0 (1)
load obj5 obj6 obj0 (1)
unload obj5 obj17 obj0 (1)
load obj5 obj16 obj0 (1)
unload obj5 obj15 obj0 (1)
unload obj5 obj14 obj0 (1)
unload obj5 obj11 obj0 (1)
load obj5 obj10 obj0 (1)
fly obj5 obj0 obj2 (1)
unload obj5 obj8 obj2 (1)
unload obj5 obj6 obj2 (1)
unload obj5 obj16 obj2 (1)
unload obj5 obj10 obj2 (1)
[t=0.0045925s, 1192 KB] Plan length: 23 step(s).
[t=0.0045925s, 1192 KB] Plan cost: 23
[t=0.0045925s, 1192 KB] Expanded 58 state(s).
[t=0.0045925s, 1192 KB] Reopened 0 state(s).
[t=0.0045925s, 1192 KB] Evaluated 59 state(s).
[t=0.0045925s, 1192 KB] Evaluations: 118
[t=0.0045925s, 1192 KB] Generated 1049 state(s).
[t=0.0045925s, 1192 KB] Dead ends: 0 state(s).
[t=0.0045925s, 1192 KB] Number of registered states: 59
[t=0.0045925s, 1192 KB] Int hash set load factor: 59/64 = 0.921875
[t=0.0045925s, 1192 KB] Int hash set resizes: 6
[t=0.0045925s, 1192 KB] Search time: 0.0012345s
[t=0.0045925s, 1192 KB] Total time: 0.0045925s
Solution found.
search exit code: 0

