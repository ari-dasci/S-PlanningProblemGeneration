INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_10.pddl --sas-file temp_problems/sas_plan_10
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
272 relevant atoms
136 auxiliary atoms
408 final queue length
499 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
4 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.016s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
17 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
122 of 122 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 54
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 122
Translator axioms: 0
Translator task size: 513
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_10
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_10 < temp_problems/sas_plan_10
[t=1.71e-05s, 800 KB] reading input...
[t=0.0007367s, 816 KB] done reading input!
[t=0.0025072s, 1156 KB] Initializing landmark count heuristic...
[t=0.0025321s, 1156 KB] Generating landmark graph...
[t=0.0025647s, 1164 KB] Building a landmark graph with reasonable orders.
[t=0.0026281s, 1164 KB] Initializing Exploration...
[t=0.0027154s, 1180 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0030215s, 1196 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0030467s, 1196 KB] Landmarks generation time: 0.0004378s
[t=0.0030593s, 1196 KB] Discovered 8 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0030703s, 1196 KB] 4 edges
[t=0.0030802s, 1196 KB] approx. reasonable orders
[t=0.0031027s, 1196 KB] approx. obedient reasonable orders
[t=0.0031256s, 1196 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0031568s, 1196 KB] Landmarks generation time: 0.0006109s
[t=0.0031665s, 1196 KB] Discovered 8 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0031764s, 1196 KB] 4 edges
[t=0.0031856s, 1196 KB] Landmark graph generation time: 0.000656s
[t=0.003195s, 1196 KB] Landmark graph contains 8 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0032043s, 1196 KB] Landmark graph contains 4 orderings.
[t=0.0032934s, 1196 KB] Simplifying 122 unary operators... done! [122 unary operators]
[t=0.0033622s, 1196 KB] time to simplify: 7.22e-05s
[t=0.0033859s, 1196 KB] Initializing additive heuristic...
[t=0.0033949s, 1196 KB] Initializing FF heuristic...
[t=0.0034719s, 1196 KB] Building successor generator...done!
[t=0.0035542s, 1196 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0035638s, 1196 KB] time for successor generation creation: 5.91e-05s
[t=0.0035759s, 1196 KB] Variables: 9
[t=0.0035846s, 1196 KB] FactPairs: 54
[t=0.0035931s, 1196 KB] Bytes per state: 4
[t=0.0038243s, 1216 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0038444s, 1216 KB] 4 initial landmarks, 4 goal landmarks
[t=0.0038724s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0038823s, 1216 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0038954s, 1216 KB] g=0, 1 evaluated, 0 expanded
[t=0.0039284s, 1216 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0039384s, 1216 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.003972s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0039812s, 1216 KB] g=1, 3 evaluated, 2 expanded
[t=0.004022s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.004031s, 1216 KB] g=2, 5 evaluated, 4 expanded
[t=0.0041072s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0041189s, 1216 KB] g=3, 9 evaluated, 8 expanded
[t=0.004163s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0041734s, 1216 KB] g=4, 11 evaluated, 10 expanded
[t=0.0042154s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0042259s, 1216 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0042351s, 1216 KB] g=5, 13 evaluated, 12 expanded
[t=0.0042713s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0042808s, 1216 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0042898s, 1216 KB] g=6, 15 evaluated, 14 expanded
[t=0.0043267s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0043398s, 1216 KB] g=7, 17 evaluated, 16 expanded
[t=0.0043732s, 1216 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0043825s, 1216 KB] g=7, 19 evaluated, 18 expanded
[t=0.0044099s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0044181s, 1216 KB] g=8, 20 evaluated, 19 expanded
[t=0.004442s, 1216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0044508s, 1216 KB] g=9, 22 evaluated, 21 expanded
[t=0.0044654s, 1216 KB] Solution found!
[t=0.0044752s, 1216 KB] Actual search time: 0.000622s
load obj9 obj7 obj0 (1)
load obj9 obj16 obj0 (1)
load obj9 obj12 obj0 (1)
fly obj9 obj0 obj10 (1)
unload obj9 obj7 obj10 (1)
unload obj9 obj16 obj10 (1)
load obj9 obj14 obj10 (1)
unload obj9 obj12 obj10 (1)
fly obj9 obj10 obj0 (1)
unload obj9 obj14 obj0 (1)
[t=0.0044821s, 1216 KB] Plan length: 10 step(s).
[t=0.0044821s, 1216 KB] Plan cost: 10
[t=0.0044821s, 1216 KB] Expanded 22 state(s).
[t=0.0044821s, 1216 KB] Reopened 0 state(s).
[t=0.0044821s, 1216 KB] Evaluated 23 state(s).
[t=0.0044821s, 1216 KB] Evaluations: 46
[t=0.0044821s, 1216 KB] Generated 376 state(s).
[t=0.0044821s, 1216 KB] Dead ends: 0 state(s).
[t=0.0044821s, 1216 KB] Number of registered states: 23
[t=0.0044821s, 1216 KB] Int hash set load factor: 23/32 = 0.71875
[t=0.0044821s, 1216 KB] Int hash set resizes: 5
[t=0.0044821s, 1216 KB] Search time: 0.0006595s
[t=0.0044821s, 1216 KB] Total time: 0.0044821s
Solution found.
search exit code: 0

