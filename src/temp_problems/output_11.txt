INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_11.pddl --sas-file temp_problems/sas_plan_11
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
350 relevant atoms
174 auxiliary atoms
524 final queue length
683 total queue pushes
Completing instantiation... [0.000s CPU, 0.007s wall-clock]
Instantiating: [0.000s CPU, 0.018s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
194 of 194 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 62
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 194
Translator axioms: 0
Translator task size: 801
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.000s CPU, 0.033s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_11
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_11 < temp_problems/sas_plan_11
[t=8.8e-06s, 720 KB] reading input...
[t=0.0006623s, 756 KB] done reading input!
[t=0.0017492s, 1096 KB] Initializing landmark count heuristic...
[t=0.0017717s, 1104 KB] Generating landmark graph...
[t=0.0017932s, 1108 KB] Building a landmark graph with reasonable orders.
[t=0.0018462s, 1108 KB] Initializing Exploration...
[t=0.0019346s, 1124 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0022985s, 1176 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0023115s, 1176 KB] Landmarks generation time: 0.0004823s
[t=0.0023219s, 1176 KB] Discovered 16 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023292s, 1176 KB] 15 edges
[t=0.002336s, 1176 KB] approx. reasonable orders
[t=0.0023553s, 1176 KB] approx. obedient reasonable orders
[t=0.0023685s, 1176 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0023754s, 1176 KB] Landmarks generation time: 0.0005976s
[t=0.0023826s, 1176 KB] Discovered 16 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0023899s, 1176 KB] 15 edges
[t=0.0023966s, 1176 KB] Landmark graph generation time: 0.0006268s
[t=0.0024035s, 1176 KB] Landmark graph contains 16 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0024106s, 1176 KB] Landmark graph contains 15 orderings.
[t=0.002477s, 1176 KB] Simplifying 194 unary operators... done! [194 unary operators]
[t=0.0025465s, 1188 KB] time to simplify: 7.17e-05s
[t=0.0025723s, 1188 KB] Initializing additive heuristic...
[t=0.0025789s, 1188 KB] Initializing FF heuristic...
[t=0.0026289s, 1188 KB] Building successor generator...done!
[t=0.0027016s, 1192 KB] peak memory difference for successor generator creation: 4 KB
[t=0.0027082s, 1192 KB] time for successor generation creation: 5.99e-05s
[t=0.002717s, 1192 KB] Variables: 9
[t=0.0027237s, 1192 KB] FactPairs: 62
[t=0.00273s, 1192 KB] Bytes per state: 4
[t=0.0028799s, 1212 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0028957s, 1212 KB] 5 initial landmarks, 4 goal landmarks
[t=0.0029236s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0029379s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.002947s, 1212 KB] g=0, 1 evaluated, 0 expanded
[t=0.0029703s, 1212 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0029795s, 1212 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.003031s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0030399s, 1212 KB] g=1, 4 evaluated, 3 expanded
[t=0.0030666s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0030762s, 1212 KB] g=1, 5 evaluated, 4 expanded
[t=0.0031188s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0031301s, 1212 KB] g=2, 7 evaluated, 6 expanded
[t=0.0031679s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.003185s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0031972s, 1212 KB] g=3, 9 evaluated, 8 expanded
[t=0.0032308s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0032402s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0032492s, 1212 KB] g=4, 10 evaluated, 9 expanded
[t=0.0032964s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.003306s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.00332s, 1212 KB] g=5, 12 evaluated, 11 expanded
[t=0.0033469s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0033606s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0033679s, 1212 KB] g=6, 13 evaluated, 12 expanded
[t=0.0033864s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0034049s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0034168s, 1212 KB] g=7, 14 evaluated, 13 expanded
[t=0.0034472s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0034662s, 1212 KB] g=8, 15 evaluated, 14 expanded
[t=0.0035224s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0035359s, 1212 KB] g=9, 17 evaluated, 16 expanded
[t=0.0035855s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0035963s, 1212 KB] g=10, 19 evaluated, 18 expanded
[t=0.0036197s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00363s, 1212 KB] g=10, 20 evaluated, 19 expanded
[t=0.0036539s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0036633s, 1212 KB] g=11, 21 evaluated, 20 expanded
[t=0.0036907s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0037018s, 1212 KB] g=11, 22 evaluated, 21 expanded
[t=0.0037605s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0037743s, 1212 KB] g=12, 25 evaluated, 24 expanded
[t=0.0038135s, 1212 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0038234s, 1212 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0038326s, 1212 KB] g=13, 27 evaluated, 26 expanded
[t=0.0038599s, 1212 KB] Solution found!
[t=0.0038712s, 1212 KB] Actual search time: 0.0009679s
load obj2 obj5 obj0 (1)
fly obj2 obj0 obj3 (1)
unload obj2 obj5 obj3 (1)
drive obj13 obj0 obj11 (1)
load obj13 obj15 obj11 (1)
drive obj13 obj11 obj16 (1)
unload obj13 obj15 obj16 (1)
fly obj12 obj0 obj7 (1)
load obj12 obj9 obj7 (1)
load obj12 obj14 obj7 (1)
fly obj12 obj7 obj0 (1)
unload obj12 obj14 obj0 (1)
fly obj12 obj0 obj6 (1)
unload obj12 obj9 obj6 (1)
[t=0.0038845s, 1212 KB] Plan length: 14 step(s).
[t=0.0038845s, 1212 KB] Plan cost: 14
[t=0.0038845s, 1212 KB] Expanded 27 state(s).
[t=0.0038845s, 1212 KB] Reopened 0 state(s).
[t=0.0038845s, 1212 KB] Evaluated 28 state(s).
[t=0.0038845s, 1212 KB] Evaluations: 56
[t=0.0038845s, 1212 KB] Generated 463 state(s).
[t=0.0038845s, 1212 KB] Dead ends: 0 state(s).
[t=0.0038845s, 1212 KB] Number of registered states: 28
[t=0.0038845s, 1212 KB] Int hash set load factor: 28/32 = 0.875
[t=0.0038845s, 1212 KB] Int hash set resizes: 5
[t=0.0038845s, 1212 KB] Search time: 0.0010058s
[t=0.0038845s, 1212 KB] Total time: 0.0038845s
Solution found.
search exit code: 0

