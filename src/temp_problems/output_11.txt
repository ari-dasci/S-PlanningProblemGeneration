INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Carlos\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_11.pddl --sas-file temp_problems/sas_plan_11
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
285 relevant atoms
126 auxiliary atoms
411 final queue length
501 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.000s CPU, 0.015s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
4 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.001s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.016s CPU, 0.006s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
132 of 132 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 60
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 132
Translator axioms: 0
Translator task size: 542
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.016s CPU, 0.044s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_11
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Carlos\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_11 < temp_problems/sas_plan_11
[t=3.1e-05s, 720 KB] reading input...
[t=0.0014572s, 744 KB] done reading input!
[t=0.0045938s, 1096 KB] Initializing landmark count heuristic...
[t=0.004626s, 1104 KB] Generating landmark graph...
[t=0.0046574s, 1104 KB] Building a landmark graph with reasonable orders.
[t=0.0047398s, 1104 KB] Initializing Exploration...
[t=0.0048848s, 1112 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0056943s, 1140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0057267s, 1140 KB] Landmarks generation time: 0.0010136s
[t=0.0057369s, 1140 KB] Discovered 20 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0057461s, 1140 KB] 32 edges
[t=0.0057543s, 1140 KB] approx. reasonable orders
[t=0.0058109s, 1140 KB] approx. obedient reasonable orders
[t=0.0058359s, 1140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0058444s, 1140 KB] Landmarks generation time: 0.0012131s
[t=0.0058529s, 1140 KB] Discovered 20 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0058616s, 1140 KB] 32 edges
[t=0.0058687s, 1140 KB] Landmark graph generation time: 0.0012462s
[t=0.0058769s, 1140 KB] Landmark graph contains 20 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0058857s, 1140 KB] Landmark graph contains 32 orderings.
[t=0.0060166s, 1140 KB] Simplifying 132 unary operators... done! [132 unary operators]
[t=0.0061227s, 1152 KB] time to simplify: 0.0001109s
[t=0.0061563s, 1152 KB] Initializing additive heuristic...
[t=0.0061644s, 1152 KB] Initializing FF heuristic...
[t=0.0062706s, 1152 KB] Building successor generator...done!
[t=0.0063914s, 1152 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0064005s, 1152 KB] time for successor generation creation: 0.0001s
[t=0.0064127s, 1152 KB] Variables: 8
[t=0.0064204s, 1152 KB] FactPairs: 60
[t=0.0064276s, 1152 KB] Bytes per state: 4
[t=0.00675s, 1172 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0067697s, 1172 KB] 6 initial landmarks, 6 goal landmarks
[t=0.0068146s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0068256s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0068332s, 1172 KB] g=0, 1 evaluated, 0 expanded
[t=0.0068612s, 1172 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0068691s, 1172 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0069078s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.006917s, 1172 KB] g=1, 2 evaluated, 1 expanded
[t=0.0069551s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0069635s, 1172 KB] g=1, 3 evaluated, 2 expanded
[t=0.0070237s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0070326s, 1172 KB] g=2, 5 evaluated, 4 expanded
[t=0.0071367s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0071462s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.007154s, 1172 KB] g=3, 9 evaluated, 8 expanded
[t=0.0072385s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0072492s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0072575s, 1172 KB] g=4, 12 evaluated, 11 expanded
[t=0.0073435s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.007355s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0073633s, 1172 KB] g=5, 15 evaluated, 14 expanded
[t=0.0074277s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0074381s, 1172 KB] g=6, 17 evaluated, 16 expanded
[t=0.0074761s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0074898s, 1172 KB] g=6, 18 evaluated, 17 expanded
[t=0.0075624s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0075731s, 1172 KB] g=7, 20 evaluated, 19 expanded
[t=0.0077052s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0077159s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0077238s, 1172 KB] g=8, 25 evaluated, 24 expanded
[t=0.0077992s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0078086s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0078167s, 1172 KB] g=9, 28 evaluated, 27 expanded
[t=0.0078966s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0079073s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0079153s, 1172 KB] g=10, 31 evaluated, 30 expanded
[t=0.007945s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.007953s, 1172 KB] g=11, 32 evaluated, 31 expanded
[t=0.0079861s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0079949s, 1172 KB] g=12, 33 evaluated, 32 expanded
[t=0.0080257s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0080342s, 1172 KB] g=12, 34 evaluated, 33 expanded
[t=0.0080644s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.008072s, 1172 KB] g=13, 35 evaluated, 34 expanded
[t=0.0081397s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0081482s, 1172 KB] g=13, 38 evaluated, 37 expanded
[t=0.0081796s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0081882s, 1172 KB] g=14, 39 evaluated, 38 expanded
[t=0.0082184s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0082262s, 1172 KB] g=14, 40 evaluated, 39 expanded
[t=0.0082776s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0082873s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0082953s, 1172 KB] g=15, 42 evaluated, 41 expanded
[t=0.0083325s, 1172 KB] Solution found!
[t=0.0083426s, 1172 KB] Actual search time: 0.0015661s
load obj16 obj12 obj0 (1)
fly obj16 obj0 obj3 (1)
load obj16 obj9 obj3 (1)
unload obj16 obj12 obj3 (1)
load obj16 obj10 obj3 (1)
fly obj16 obj3 obj5 (1)
unload obj16 obj9 obj5 (1)
load obj16 obj14 obj5 (1)
load obj16 obj13 obj5 (1)
load obj16 obj11 obj5 (1)
fly obj16 obj5 obj0 (1)
unload obj16 obj14 obj0 (1)
unload obj16 obj10 obj0 (1)
fly obj16 obj0 obj3 (1)
unload obj16 obj13 obj3 (1)
unload obj16 obj11 obj3 (1)
[t=0.0083514s, 1172 KB] Plan length: 16 step(s).
[t=0.0083514s, 1172 KB] Plan cost: 16
[t=0.0083514s, 1172 KB] Expanded 42 state(s).
[t=0.0083514s, 1172 KB] Reopened 0 state(s).
[t=0.0083514s, 1172 KB] Evaluated 43 state(s).
[t=0.0083514s, 1172 KB] Evaluations: 86
[t=0.0083514s, 1172 KB] Generated 512 state(s).
[t=0.0083514s, 1172 KB] Dead ends: 0 state(s).
[t=0.0083514s, 1172 KB] Number of registered states: 43
[t=0.0083514s, 1172 KB] Int hash set load factor: 43/64 = 0.671875
[t=0.0083514s, 1172 KB] Int hash set resizes: 6
[t=0.0083514s, 1172 KB] Search time: 0.0016033s
[t=0.0083514s, 1172 KB] Total time: 0.0083514s
Solution found.
search exit code: 0

