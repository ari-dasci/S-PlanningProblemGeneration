INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_11.pddl --sas-file temp_problems/sas_plan_11
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.016s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
246 relevant atoms
137 auxiliary atoms
383 final queue length
461 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.000s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
3 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
102 of 102 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.016s CPU, 0.016s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 48
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 102
Translator axioms: 0
Translator task size: 438
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.016s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_11
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_11 < temp_problems/sas_plan_11
[t=9.3e-06s, 724 KB] reading input...
[t=0.0003873s, 744 KB] done reading input!
[t=0.0014474s, 1092 KB] Initializing landmark count heuristic...
[t=0.0014659s, 1100 KB] Generating landmark graph...
[t=0.0014795s, 1100 KB] Building a landmark graph with reasonable orders.
[t=0.0015379s, 1100 KB] Initializing Exploration...
[t=0.0016033s, 1112 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0018793s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0018971s, 1128 KB] Landmarks generation time: 0.0003699s
[t=0.001905s, 1128 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0019129s, 1128 KB] 22 edges
[t=0.00192s, 1128 KB] approx. reasonable orders
[t=0.0019359s, 1128 KB] approx. obedient reasonable orders
[t=0.0019467s, 1128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0019536s, 1128 KB] Landmarks generation time: 0.0004815s
[t=0.0019613s, 1128 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0019709s, 1128 KB] 22 edges
[t=0.0019826s, 1128 KB] Landmark graph generation time: 0.0005191s
[t=0.0019911s, 1128 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0019985s, 1128 KB] Landmark graph contains 22 orderings.
[t=0.0020548s, 1128 KB] Simplifying 102 unary operators... done! [102 unary operators]
[t=0.0020941s, 1128 KB] time to simplify: 4.12e-05s
[t=0.0021114s, 1128 KB] Initializing additive heuristic...
[t=0.0021183s, 1128 KB] Initializing FF heuristic...
[t=0.0021748s, 1140 KB] Building successor generator...done!
[t=0.0022219s, 1140 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0022287s, 1140 KB] time for successor generation creation: 3.32e-05s
[t=0.0022369s, 1140 KB] Variables: 9
[t=0.0022438s, 1140 KB] FactPairs: 48
[t=0.0022503s, 1140 KB] Bytes per state: 4
[t=0.002441s, 1152 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0024512s, 1152 KB] 4 initial landmarks, 3 goal landmarks
[t=0.0024695s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0024768s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0024838s, 1152 KB] g=0, 1 evaluated, 0 expanded
[t=0.0024977s, 1152 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0025047s, 1152 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0025246s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0025314s, 1152 KB] g=1, 3 evaluated, 2 expanded
[t=0.0025671s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0025741s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0025825s, 1152 KB] g=3, 7 evaluated, 6 expanded
[t=0.0026298s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0026371s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0026441s, 1152 KB] g=5, 12 evaluated, 11 expanded
[t=0.0026758s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0026828s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0026913s, 1152 KB] g=6, 15 evaluated, 14 expanded
[t=0.0027157s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0027224s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0027292s, 1152 KB] g=7, 17 evaluated, 16 expanded
[t=0.0027523s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0027596s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0027662s, 1152 KB] g=8, 19 evaluated, 18 expanded
[t=0.0027923s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.002799s, 1152 KB] g=9, 21 evaluated, 20 expanded
[t=0.0084033s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0084274s, 1152 KB] g=9, 23 evaluated, 22 expanded
[t=0.008457s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0084681s, 1152 KB] g=10, 24 evaluated, 23 expanded
[t=0.0085294s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0085402s, 1152 KB] g=11, 27 evaluated, 26 expanded
[t=0.0085748s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0085851s, 1152 KB] g=12, 29 evaluated, 28 expanded
[t=0.008616s, 1152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0086265s, 1152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0086366s, 1152 KB] g=13, 30 evaluated, 29 expanded
[t=0.0086601s, 1152 KB] Solution found!
[t=0.0086714s, 1152 KB] Actual search time: 0.006215s
load obj5 obj6 obj0 (1)
fly obj5 obj0 obj7 (1)
unload obj5 obj6 obj7 (1)
drive obj10 obj0 obj11 (1)
load obj10 obj14 obj11 (1)
load obj10 obj13 obj11 (1)
drive obj10 obj11 obj0 (1)
unload obj10 obj14 obj0 (1)
load obj4 obj14 obj0 (1)
unload obj10 obj13 obj0 (1)
load obj4 obj13 obj0 (1)
fly obj4 obj0 obj7 (1)
unload obj4 obj14 obj7 (1)
unload obj4 obj13 obj7 (1)
[t=0.0086813s, 1152 KB] Plan length: 14 step(s).
[t=0.0086813s, 1152 KB] Plan cost: 14
[t=0.0086813s, 1152 KB] Expanded 30 state(s).
[t=0.0086813s, 1152 KB] Reopened 0 state(s).
[t=0.0086813s, 1152 KB] Evaluated 31 state(s).
[t=0.0086813s, 1152 KB] Evaluations: 62
[t=0.0086813s, 1152 KB] Generated 389 state(s).
[t=0.0086813s, 1152 KB] Dead ends: 0 state(s).
[t=0.0086813s, 1152 KB] Number of registered states: 31
[t=0.0086813s, 1152 KB] Int hash set load factor: 31/32 = 0.96875
[t=0.0086813s, 1152 KB] Int hash set resizes: 5
[t=0.0086813s, 1152 KB] Search time: 0.0062408s
[t=0.0086813s, 1152 KB] Total time: 0.0086813s
Solution found.
search exit code: 0

