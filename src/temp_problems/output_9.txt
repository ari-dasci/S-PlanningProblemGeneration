INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: 'C:\Users\Usuario\anaconda3\envs\problem-generation\python.exe' 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\translate\translate.py' ../data/domains/logistics-domain.pddl temp_problems/temp_problem_9.pddl --sas-file temp_problems/sas_plan_9
Warning! SIGXCPU is not available on your platform. This means that the planner cannot be gracefully terminated when using a time limit, which, however, is probably supported on your platform anyway.
Parsing...
Parsing: [0.000s CPU, 0.000s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 23 rules.
Computing model... [0.000s CPU, 0.016s wall-clock]
333 relevant atoms
165 auxiliary atoms
498 final queue length
644 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.016s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Reordering and filtering variables...
7 of 8 variables necessary.
0 of 8 mutex groups necessary.
150 of 182 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 7
Translator derived variables: 0
Translator facts: 49
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 150
Translator axioms: 0
Translator task size: 605
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.016s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: temp_problems/sas_plan_9
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: 'C:\Users\Usuario\Desktop\NeSIG\S-PlanningProblemGeneration\src\fast-downward\builds\release\bin\downward.exe' --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file temp_problems/plan_9 < temp_problems/sas_plan_9
[t=6.8e-06s, 724 KB] reading input...
[t=0.0005197s, 748 KB] done reading input!
[t=0.0016514s, 1092 KB] Initializing landmark count heuristic...
[t=0.0016709s, 1100 KB] Generating landmark graph...
[t=0.0016884s, 1100 KB] Building a landmark graph with reasonable orders.
[t=0.0017387s, 1100 KB] Initializing Exploration...
[t=0.0018032s, 1116 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0020725s, 1136 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0020898s, 1136 KB] Landmarks generation time: 0.0003653s
[t=0.002097s, 1136 KB] Discovered 11 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.0021067s, 1136 KB] 13 edges
[t=0.0021162s, 1136 KB] approx. reasonable orders
[t=0.002132s, 1136 KB] approx. obedient reasonable orders
[t=0.0021421s, 1136 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0021493s, 1136 KB] Landmarks generation time: 0.0004732s
[t=0.0021595s, 1136 KB] Discovered 11 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.0021669s, 1136 KB] 13 edges
[t=0.0021731s, 1136 KB] Landmark graph generation time: 0.0005038s
[t=0.0021795s, 1136 KB] Landmark graph contains 11 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.0021861s, 1136 KB] Landmark graph contains 13 orderings.
[t=0.0022489s, 1136 KB] Simplifying 150 unary operators... done! [150 unary operators]
[t=0.0023025s, 1148 KB] time to simplify: 5.55e-05s
[t=0.0023199s, 1148 KB] Initializing additive heuristic...
[t=0.0023259s, 1148 KB] Initializing FF heuristic...
[t=0.0023721s, 1148 KB] Building successor generator...done!
[t=0.0024269s, 1152 KB] peak memory difference for successor generator creation: 4 KB
[t=0.0024331s, 1152 KB] time for successor generation creation: 4.32e-05s
[t=0.0024412s, 1152 KB] Variables: 7
[t=0.0024472s, 1152 KB] FactPairs: 49
[t=0.0024534s, 1152 KB] Bytes per state: 4
[t=0.0025884s, 1172 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0025976s, 1172 KB] 3 initial landmarks, 3 goal landmarks
[t=0.0026178s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.002624s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.00263s, 1172 KB] g=0, 1 evaluated, 0 expanded
[t=0.002645s, 1172 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0026512s, 1172 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0026623s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0026683s, 1172 KB] g=1, 2 evaluated, 1 expanded
[t=0.0026946s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0027007s, 1172 KB] g=2, 4 evaluated, 3 expanded
[t=0.0027261s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0027323s, 1172 KB] g=1, 6 evaluated, 5 expanded
[t=0.0027481s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.002754s, 1172 KB] g=3, 7 evaluated, 6 expanded
[t=0.0027804s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0027866s, 1172 KB] g=4, 9 evaluated, 8 expanded
[t=0.0028066s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0028125s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0028184s, 1172 KB] g=5, 10 evaluated, 9 expanded
[t=0.0028439s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0028498s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0028556s, 1172 KB] g=6, 12 evaluated, 11 expanded
[t=0.0028719s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0028778s, 1172 KB] g=7, 13 evaluated, 12 expanded
[t=0.0028933s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0028992s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0029124s, 1172 KB] g=8, 14 evaluated, 13 expanded
[t=0.0029378s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0029437s, 1172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0029498s, 1172 KB] g=9, 16 evaluated, 15 expanded
[t=0.0029675s, 1172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0029735s, 1172 KB] g=10, 17 evaluated, 16 expanded
[t=0.0029882s, 1172 KB] Solution found!
[t=0.0029946s, 1172 KB] Actual search time: 0.0003918s
fly obj9 obj4 obj0 (1)
drive obj8 obj4 obj11 (1)
load obj8 obj13 obj11 (1)
drive obj8 obj11 obj4 (1)
unload obj8 obj13 obj4 (1)
load obj7 obj12 obj2 (1)
drive obj7 obj2 obj0 (1)
unload obj7 obj12 obj0 (1)
load obj14 obj10 obj6 (1)
drive obj14 obj6 obj0 (1)
unload obj14 obj10 obj0 (1)
[t=0.0030004s, 1172 KB] Plan length: 11 step(s).
[t=0.0030004s, 1172 KB] Plan cost: 11
[t=0.0030004s, 1172 KB] Expanded 17 state(s).
[t=0.0030004s, 1172 KB] Reopened 0 state(s).
[t=0.0030004s, 1172 KB] Evaluated 18 state(s).
[t=0.0030004s, 1172 KB] Evaluations: 36
[t=0.0030004s, 1172 KB] Generated 254 state(s).
[t=0.0030004s, 1172 KB] Dead ends: 0 state(s).
[t=0.0030004s, 1172 KB] Number of registered states: 18
[t=0.0030004s, 1172 KB] Int hash set load factor: 18/32 = 0.5625
[t=0.0030004s, 1172 KB] Int hash set resizes: 5
[t=0.0030004s, 1172 KB] Search time: 0.0004125s
[t=0.0030004s, 1172 KB] Total time: 0.0030004s
Solution found.
search exit code: 0

